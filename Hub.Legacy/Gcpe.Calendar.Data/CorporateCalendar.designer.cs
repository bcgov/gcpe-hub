#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CorporateCalendar.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Gcpe.Hub")]
	public partial class CorporateCalendarDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivitySharedWith(ActivitySharedWith instance);
    partial void UpdateActivitySharedWith(ActivitySharedWith instance);
    partial void DeleteActivitySharedWith(ActivitySharedWith instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertActivitySector(ActivitySector instance);
    partial void UpdateActivitySector(ActivitySector instance);
    partial void DeleteActivitySector(ActivitySector instance);
    partial void InsertActivityNROrigin(ActivityNROrigin instance);
    partial void UpdateActivityNROrigin(ActivityNROrigin instance);
    partial void DeleteActivityNROrigin(ActivityNROrigin instance);
    partial void InsertActivityCommunicationMaterial(ActivityCommunicationMaterial instance);
    partial void UpdateActivityCommunicationMaterial(ActivityCommunicationMaterial instance);
    partial void DeleteActivityCommunicationMaterial(ActivityCommunicationMaterial instance);
    partial void InsertActivityCategory(ActivityCategory instance);
    partial void UpdateActivityCategory(ActivityCategory instance);
    partial void DeleteActivityCategory(ActivityCategory instance);
    partial void InsertActivityFilter(ActivityFilter instance);
    partial void UpdateActivityFilter(ActivityFilter instance);
    partial void DeleteActivityFilter(ActivityFilter instance);
    partial void InsertSystemUserMinistry(SystemUserMinistry instance);
    partial void UpdateSystemUserMinistry(SystemUserMinistry instance);
    partial void DeleteSystemUserMinistry(SystemUserMinistry instance);
    partial void InsertNewsFeed(NewsFeed instance);
    partial void UpdateNewsFeed(NewsFeed instance);
    partial void DeleteNewsFeed(NewsFeed instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCommunicationMaterial(CommunicationMaterial instance);
    partial void UpdateCommunicationMaterial(CommunicationMaterial instance);
    partial void DeleteCommunicationMaterial(CommunicationMaterial instance);
    partial void InsertNROrigin(NROrigin instance);
    partial void UpdateNROrigin(NROrigin instance);
    partial void DeleteNROrigin(NROrigin instance);
    partial void InsertCommunicationContact(CommunicationContact instance);
    partial void UpdateCommunicationContact(CommunicationContact instance);
    partial void DeleteCommunicationContact(CommunicationContact instance);
    partial void InsertNRDistribution(NRDistribution instance);
    partial void UpdateNRDistribution(NRDistribution instance);
    partial void DeleteNRDistribution(NRDistribution instance);
    partial void InsertPremierRequested(PremierRequested instance);
    partial void UpdatePremierRequested(PremierRequested instance);
    partial void DeletePremierRequested(PremierRequested instance);
    partial void InsertGovernmentRepresentative(GovernmentRepresentative instance);
    partial void UpdateGovernmentRepresentative(GovernmentRepresentative instance);
    partial void DeleteGovernmentRepresentative(GovernmentRepresentative instance);
    partial void InsertEventPlanner(EventPlanner instance);
    partial void UpdateEventPlanner(EventPlanner instance);
    partial void DeleteEventPlanner(EventPlanner instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertVideographer(Videographer instance);
    partial void UpdateVideographer(Videographer instance);
    partial void DeleteVideographer(Videographer instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertMinistry(Ministry instance);
    partial void UpdateMinistry(Ministry instance);
    partial void DeleteMinistry(Ministry instance);
    partial void InsertSector(Sector instance);
    partial void UpdateSector(Sector instance);
    partial void DeleteSector(Sector instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertTheme(Theme instance);
    partial void UpdateTheme(Theme instance);
    partial void DeleteTheme(Theme instance);
    partial void InsertActivityTheme(ActivityTheme instance);
    partial void UpdateActivityTheme(ActivityTheme instance);
    partial void DeleteActivityTheme(ActivityTheme instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertActivityTag(ActivityTag instance);
    partial void UpdateActivityTag(ActivityTag instance);
    partial void DeleteActivityTag(ActivityTag instance);
    partial void InsertInitiative(Initiative instance);
    partial void UpdateInitiative(Initiative instance);
    partial void DeleteInitiative(Initiative instance);
    partial void InsertActivityInitiative(ActivityInitiative instance);
    partial void UpdateActivityInitiative(ActivityInitiative instance);
    partial void DeleteActivityInitiative(ActivityInitiative instance);
    partial void InsertSystemUser(SystemUser instance);
    partial void UpdateSystemUser(SystemUser instance);
    partial void DeleteSystemUser(SystemUser instance);
    partial void InsertFavoriteActivity(FavoriteActivity instance);
    partial void UpdateFavoriteActivity(FavoriteActivity instance);
    partial void DeleteFavoriteActivity(FavoriteActivity instance);
    partial void InsertActivityKeyword(ActivityKeyword instance);
    partial void UpdateActivityKeyword(ActivityKeyword instance);
    partial void DeleteActivityKeyword(ActivityKeyword instance);
    partial void InsertKeyword(Keyword instance);
    partial void UpdateKeyword(Keyword instance);
    partial void DeleteKeyword(Keyword instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertActivityFile(ActivityFile instance);
    partial void UpdateActivityFile(ActivityFile instance);
    partial void DeleteActivityFile(ActivityFile instance);
    #endregion
		
		public CorporateCalendarDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CorporateCalendarDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CorporateCalendarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CorporateCalendarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActivitySharedWith> ActivitySharedWiths
		{
			get
			{
				return this.GetTable<ActivitySharedWith>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<ActivitySector> ActivitySectors
		{
			get
			{
				return this.GetTable<ActivitySector>();
			}
		}
		
		public System.Data.Linq.Table<ActivityNROrigin> ActivityNROrigins
		{
			get
			{
				return this.GetTable<ActivityNROrigin>();
			}
		}
		
		public System.Data.Linq.Table<ActivityCommunicationMaterial> ActivityCommunicationMaterials
		{
			get
			{
				return this.GetTable<ActivityCommunicationMaterial>();
			}
		}
		
		public System.Data.Linq.Table<ActivityCategory> ActivityCategories
		{
			get
			{
				return this.GetTable<ActivityCategory>();
			}
		}
		
		public System.Data.Linq.Table<ActivityFilter> ActivityFilters
		{
			get
			{
				return this.GetTable<ActivityFilter>();
			}
		}
		
		public System.Data.Linq.Table<SystemUserMinistry> SystemUserMinistries
		{
			get
			{
				return this.GetTable<SystemUserMinistry>();
			}
		}
		
		public System.Data.Linq.Table<NewsFeed> NewsFeeds
		{
			get
			{
				return this.GetTable<NewsFeed>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<CommunicationMaterial> CommunicationMaterials
		{
			get
			{
				return this.GetTable<CommunicationMaterial>();
			}
		}
		
		public System.Data.Linq.Table<NROrigin> NROrigins
		{
			get
			{
				return this.GetTable<NROrigin>();
			}
		}
		
		public System.Data.Linq.Table<CommunicationContact> CommunicationContacts
		{
			get
			{
				return this.GetTable<CommunicationContact>();
			}
		}
		
		public System.Data.Linq.Table<NRDistribution> NRDistributions
		{
			get
			{
				return this.GetTable<NRDistribution>();
			}
		}
		
		public System.Data.Linq.Table<PremierRequested> PremierRequested
		{
			get
			{
				return this.GetTable<PremierRequested>();
			}
		}
		
		public System.Data.Linq.Table<GovernmentRepresentative> GovernmentRepresentatives
		{
			get
			{
				return this.GetTable<GovernmentRepresentative>();
			}
		}
		
		public System.Data.Linq.Table<EventPlanner> EventPlanners
		{
			get
			{
				return this.GetTable<EventPlanner>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Videographer> Videographers
		{
			get
			{
				return this.GetTable<Videographer>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<ActiveDistinctCommunicationContact> ActiveDistinctCommunicationContacts
		{
			get
			{
				return this.GetTable<ActiveDistinctCommunicationContact>();
			}
		}
		
		public System.Data.Linq.Table<ActiveCommunicationContact> ActiveCommunicationContacts
		{
			get
			{
				return this.GetTable<ActiveCommunicationContact>();
			}
		}
		
		public System.Data.Linq.Table<Ministry> Ministries
		{
			get
			{
				return this.GetTable<Ministry>();
			}
		}
		
		public System.Data.Linq.Table<Sector> Sectors
		{
			get
			{
				return this.GetTable<Sector>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<Theme> Themes
		{
			get
			{
				return this.GetTable<Theme>();
			}
		}
		
		public System.Data.Linq.Table<ActivityTheme> ActivityThemes
		{
			get
			{
				return this.GetTable<ActivityTheme>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<ActivityTag> ActivityTags
		{
			get
			{
				return this.GetTable<ActivityTag>();
			}
		}
		
		public System.Data.Linq.Table<Initiative> Initiatives
		{
			get
			{
				return this.GetTable<Initiative>();
			}
		}
		
		public System.Data.Linq.Table<ActivityInitiative> ActivityInitiatives
		{
			get
			{
				return this.GetTable<ActivityInitiative>();
			}
		}
		
		public System.Data.Linq.Table<SystemUser> SystemUsers
		{
			get
			{
				return this.GetTable<SystemUser>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteActivity> FavoriteActivities
		{
			get
			{
				return this.GetTable<FavoriteActivity>();
			}
		}
		
		public System.Data.Linq.Table<ActivityKeyword> ActivityKeywords
		{
			get
			{
				return this.GetTable<ActivityKeyword>();
			}
		}
		
		public System.Data.Linq.Table<Keyword> Keywords
		{
			get
			{
				return this.GetTable<Keyword>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<ActiveActivity> ActiveActivities
		{
			get
			{
				return this.GetTable<ActiveActivity>();
			}
		}
		
		public System.Data.Linq.Table<ActivityFile> ActivityFiles
		{
			get
			{
				return this.GetTable<ActivityFile>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetActivitySharedWithMinistries", IsComposable=true)]
		public IQueryable<GetActivitySharedWithMinistriesResult> GetActivitySharedWithMinistries([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> activityId)
		{
			return this.CreateMethodCallQuery<GetActivitySharedWithMinistriesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetActivityCategories", IsComposable=true)]
		public IQueryable<GetActivityCategoriesResult> GetActivityCategories([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> activityId)
		{
			return this.CreateMethodCallQuery<GetActivityCategoriesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetActivityCommunicationMaterials", IsComposable=true)]
		public IQueryable<GetActivityCommunicationMaterialsResult> GetActivityCommunicationMaterials([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> activityId)
		{
			return this.CreateMethodCallQuery<GetActivityCommunicationMaterialsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetActivityNewsReleaseOrigins", IsComposable=true)]
		public IQueryable<GetActivityNewsReleaseOriginsResult> GetActivityNewsReleaseOrigins([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> activityId)
		{
			return this.CreateMethodCallQuery<GetActivityNewsReleaseOriginsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetActivitySectors", IsComposable=true)]
		public IQueryable<GetActivitySectorsResult> GetActivitySectors([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> activityId)
		{
			return this.CreateMethodCallQuery<GetActivitySectorsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetCorpCalendarUpdates")]
		public ISingleResult<NewsFeed> GetCorpCalendarUpdates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsInAppOwnerList", DbType="Bit")] System.Nullable<bool> isInAppOwnerList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, isInAppOwnerList);
			return ((ISingleResult<NewsFeed>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetCorpCalendarUpdatesToday")]
		public ISingleResult<NewsFeed> GetCorpCalendarUpdatesToday([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsInAppOwnerList", DbType="Bit")] System.Nullable<bool> isInAppOwnerList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, isInAppOwnerList);
			return ((ISingleResult<NewsFeed>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.sGetActivitySectorsByName", IsComposable=true)]
		public string sGetActivitySectorsByName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActID", DbType="Int")] System.Nullable<int> actID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.sGetActivityCommunicationMaterialsByName", IsComposable=true)]
		public string sGetActivityCommunicationMaterialsByName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActID", DbType="Int")] System.Nullable<int> actID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.sGetActivitySharedWithMinistries", IsComposable=true)]
		public string sGetActivitySharedWithMinistries([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActID", DbType="Int")] System.Nullable<int> actID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetCorpCalendarUpdatesBetweenDates")]
		public ISingleResult<NewsFeed> GetCorpCalendarUpdatesBetweenDates([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsInAppOwnerList", DbType="Bit")] System.Nullable<bool> isInAppOwnerList, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActivityID", DbType="Int")] System.Nullable<int> activityID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateType", DbType="NVarChar(50)")] string updateType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, isInAppOwnerList, activityID, fromDate, toDate, updateType);
			return ((ISingleResult<NewsFeed>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetActivityThemes", IsComposable=true)]
		public IQueryable<GetActivityThemesResult> GetActivityThemes([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> activityId)
		{
			return this.CreateMethodCallQuery<GetActivityThemesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetActivityTags", IsComposable=true)]
		public IQueryable<GetActivityTagsResult> GetActivityTags([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> activityId)
		{
			return this.CreateMethodCallQuery<GetActivityTagsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.sGetActivityInitiatives", IsComposable=true)]
		public string sGetActivityInitiatives([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActivityId", DbType="Int")] System.Nullable<int> activityId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.sGetActivityNROrigins", IsComposable=true)]
		public string sGetActivityNROrigins([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActivityId", DbType="Int")] System.Nullable<int> activityId)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.sGetActivityFavoriteSystemUsers", IsComposable=true)]
		public string sGetActivityFavoriteSystemUsers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActID", DbType="Int")] System.Nullable<int> actID)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="calendar.GetActivityKeywords", IsComposable=true)]
		public IQueryable<GetActivityKeywordsResult> GetActivityKeywords([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> activityId)
		{
			return this.CreateMethodCallQuery<GetActivityKeywordsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activityId);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivitySharedWith")]
	public partial class ActivitySharedWith : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActivityId;
		
		private System.Guid _MinistryId;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Ministry> _Ministry;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnMinistryIdChanging(System.Guid value);
    partial void OnMinistryIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public ActivitySharedWith()
		{
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Ministry = default(EntityRef<Ministry>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MinistryId
		{
			get
			{
				return this._MinistryId;
			}
			set
			{
				if ((this._MinistryId != value))
				{
					if (this._Ministry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMinistryIdChanging(value);
					this.SendPropertyChanging();
					this._MinistryId = value;
					this.SendPropertyChanged("MinistryId");
					this.OnMinistryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivitySharedWith", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.ActivitySharedWiths.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.ActivitySharedWiths.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivitySharedWith1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.ActivitySharedWiths1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.ActivitySharedWiths1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_ActivitySharedWith", Storage="_Ministry", ThisKey="MinistryId", OtherKey="Id", IsForeignKey=true)]
		public Ministry Ministry
		{
			get
			{
				return this._Ministry.Entity;
			}
			set
			{
				Ministry previousValue = this._Ministry.Entity;
				if (((previousValue != value) 
							|| (this._Ministry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ministry.Entity = null;
						previousValue.ActivitySharedWiths.Remove(this);
					}
					this._Ministry.Entity = value;
					if ((value != null))
					{
						value.ActivitySharedWiths.Add(this);
						this._MinistryId = value.Id;
					}
					else
					{
						this._MinistryId = default(System.Guid);
					}
					this.SendPropertyChanged("Ministry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivitySharedWith", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivitySharedWiths.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivitySharedWiths.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActivityId;
		
		private int _LogType;
		
		private string _TableName;
		
		private string _FieldName;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private string _Operation;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnLogTypeChanging(int value);
    partial void OnLogTypeChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    partial void OnOperationChanging(string value);
    partial void OnOperationChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public Log()
		{
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LogType
		{
			get
			{
				return this._LogType;
			}
			set
			{
				if ((this._LogType != value))
				{
					this.OnLogTypeChanging(value);
					this.SendPropertyChanging();
					this._LogType = value;
					this.SendPropertyChanged("LogType");
					this.OnLogTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged("Operation");
					this.OnOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Log", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.Logs.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.Logs.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Log1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.Logs1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.Logs1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Log", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.Logs.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.Logs.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivitySectors")]
	public partial class ActivitySector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActivityId;
		
		private System.Guid _SectorId;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<Sector> _Sector;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnSectorIdChanging(System.Guid value);
    partial void OnSectorIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public ActivitySector()
		{
			this._Sector = default(EntityRef<Sector>);
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectorId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid SectorId
		{
			get
			{
				return this._SectorId;
			}
			set
			{
				if ((this._SectorId != value))
				{
					if (this._Sector.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSectorIdChanging(value);
					this.SendPropertyChanging();
					this._SectorId = value;
					this.SendPropertyChanged("SectorId");
					this.OnSectorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sector_ActivitySector", Storage="_Sector", ThisKey="SectorId", OtherKey="Id", IsForeignKey=true)]
		public Sector Sector
		{
			get
			{
				return this._Sector.Entity;
			}
			set
			{
				Sector previousValue = this._Sector.Entity;
				if (((previousValue != value) 
							|| (this._Sector.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sector.Entity = null;
						previousValue.ActivitySectors.Remove(this);
					}
					this._Sector.Entity = value;
					if ((value != null))
					{
						value.ActivitySectors.Add(this);
						this._SectorId = value.Id;
					}
					else
					{
						this._SectorId = default(System.Guid);
					}
					this.SendPropertyChanged("Sector");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivitySector", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.ActivitySectors.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.ActivitySectors.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivitySector1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.ActivitySectors1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.ActivitySectors1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivitySector", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivitySectors.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivitySectors.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityNROrigins")]
	public partial class ActivityNROrigin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActivityId;
		
		private int _NROriginId;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<NROrigin> _NROrigin;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnNROriginIdChanging(int value);
    partial void OnNROriginIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public ActivityNROrigin()
		{
			this._NROrigin = default(EntityRef<NROrigin>);
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NROriginId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int NROriginId
		{
			get
			{
				return this._NROriginId;
			}
			set
			{
				if ((this._NROriginId != value))
				{
					if (this._NROrigin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNROriginIdChanging(value);
					this.SendPropertyChanging();
					this._NROriginId = value;
					this.SendPropertyChanged("NROriginId");
					this.OnNROriginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NROrigin_ActivityNROrigin", Storage="_NROrigin", ThisKey="NROriginId", OtherKey="Id", IsForeignKey=true)]
		public NROrigin NROrigin
		{
			get
			{
				return this._NROrigin.Entity;
			}
			set
			{
				NROrigin previousValue = this._NROrigin.Entity;
				if (((previousValue != value) 
							|| (this._NROrigin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NROrigin.Entity = null;
						previousValue.ActivityNROrigins.Remove(this);
					}
					this._NROrigin.Entity = value;
					if ((value != null))
					{
						value.ActivityNROrigins.Add(this);
						this._NROriginId = value.Id;
					}
					else
					{
						this._NROriginId = default(int);
					}
					this.SendPropertyChanged("NROrigin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityNROrigin", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.ActivityNROrigins.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.ActivityNROrigins.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityNROrigin1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.ActivityNROrigins1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.ActivityNROrigins1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityNROrigin", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityNROrigins.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityNROrigins.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityCommunicationMaterials")]
	public partial class ActivityCommunicationMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActivityId;
		
		private int _CommunicationMaterialId;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<CommunicationMaterial> _CommunicationMaterial;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnCommunicationMaterialIdChanging(int value);
    partial void OnCommunicationMaterialIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public ActivityCommunicationMaterial()
		{
			this._CommunicationMaterial = default(EntityRef<CommunicationMaterial>);
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunicationMaterialId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CommunicationMaterialId
		{
			get
			{
				return this._CommunicationMaterialId;
			}
			set
			{
				if ((this._CommunicationMaterialId != value))
				{
					if (this._CommunicationMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommunicationMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._CommunicationMaterialId = value;
					this.SendPropertyChanged("CommunicationMaterialId");
					this.OnCommunicationMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunicationMaterial_ActivityCommunicationMaterial", Storage="_CommunicationMaterial", ThisKey="CommunicationMaterialId", OtherKey="Id", IsForeignKey=true)]
		public CommunicationMaterial CommunicationMaterial
		{
			get
			{
				return this._CommunicationMaterial.Entity;
			}
			set
			{
				CommunicationMaterial previousValue = this._CommunicationMaterial.Entity;
				if (((previousValue != value) 
							|| (this._CommunicationMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunicationMaterial.Entity = null;
						previousValue.ActivityCommunicationMaterials.Remove(this);
					}
					this._CommunicationMaterial.Entity = value;
					if ((value != null))
					{
						value.ActivityCommunicationMaterials.Add(this);
						this._CommunicationMaterialId = value.Id;
					}
					else
					{
						this._CommunicationMaterialId = default(int);
					}
					this.SendPropertyChanged("CommunicationMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityCommunicationMaterial", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.ActivityCommunicationMaterials.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.ActivityCommunicationMaterials.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityCommunicationMaterial1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.ActivityCommunicationMaterials1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.ActivityCommunicationMaterials1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityCommunicationMaterial", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityCommunicationMaterials.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityCommunicationMaterials.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityCategories")]
	public partial class ActivityCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActivityId;
		
		private int _CategoryId;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public ActivityCategory()
		{
			this._Category = default(EntityRef<Category>);
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_ActivityCategory", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.ActivityCategories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.ActivityCategories.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityCategory", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.ActivityCategories.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.ActivityCategories.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityCategory1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.ActivityCategories1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.ActivityCategories1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityCategory", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityCategories.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityCategories.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityFilter")]
	public partial class ActivityFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _QueryString;
		
		private string _Name;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQueryStringChanging(string value);
    partial void OnQueryStringChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    #endregion
		
		public ActivityFilter()
		{
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueryString", DbType="NVarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string QueryString
		{
			get
			{
				return this._QueryString;
			}
			set
			{
				if ((this._QueryString != value))
				{
					this.OnQueryStringChanging(value);
					this.SendPropertyChanging();
					this._QueryString = value;
					this.SendPropertyChanged("QueryString");
					this.OnQueryStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityFilter", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.ActivityFilters.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.ActivityFilters.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityFilter1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.ActivityFilters1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.ActivityFilters1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.SystemUserMinistry")]
	public partial class SystemUserMinistry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SystemUserId;
		
		private System.Nullable<System.Guid> _MinistryId;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _CreatedBySystemUser;
		
		private EntityRef<SystemUser> _LastUpdatedBySystemUser;
		
		private EntityRef<Ministry> _Ministry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSystemUserIdChanging(System.Nullable<int> value);
    partial void OnSystemUserIdChanged();
    partial void OnMinistryIdChanging(System.Nullable<System.Guid> value);
    partial void OnMinistryIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public SystemUserMinistry()
		{
			this._SystemUser = default(EntityRef<SystemUser>);
			this._CreatedBySystemUser = default(EntityRef<SystemUser>);
			this._LastUpdatedBySystemUser = default(EntityRef<SystemUser>);
			this._Ministry = default(EntityRef<Ministry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemUserId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SystemUserId
		{
			get
			{
				return this._SystemUserId;
			}
			set
			{
				if ((this._SystemUserId != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystemUserIdChanging(value);
					this.SendPropertyChanging();
					this._SystemUserId = value;
					this.SendPropertyChanged("SystemUserId");
					this.OnSystemUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> MinistryId
		{
			get
			{
				return this._MinistryId;
			}
			set
			{
				if ((this._MinistryId != value))
				{
					if (this._Ministry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMinistryIdChanging(value);
					this.SendPropertyChanging();
					this._MinistryId = value;
					this.SendPropertyChanged("MinistryId");
					this.OnMinistryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._CreatedBySystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._LastUpdatedBySystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUserMinistry", Storage="_SystemUser", ThisKey="SystemUserId", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.SystemUserMinistries.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.SystemUserMinistries.Add(this);
						this._SystemUserId = value.Id;
					}
					else
					{
						this._SystemUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUserMinistry1", Storage="_CreatedBySystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser CreatedBySystemUser
		{
			get
			{
				return this._CreatedBySystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._CreatedBySystemUser.Entity;
				if (((previousValue != value) 
							|| (this._CreatedBySystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreatedBySystemUser.Entity = null;
						previousValue.CreatedBySystemUserMinistries.Remove(this);
					}
					this._CreatedBySystemUser.Entity = value;
					if ((value != null))
					{
						value.CreatedBySystemUserMinistries.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("CreatedBySystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUserMinistry2", Storage="_LastUpdatedBySystemUser", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser LastUpdatedBySystemUser
		{
			get
			{
				return this._LastUpdatedBySystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._LastUpdatedBySystemUser.Entity;
				if (((previousValue != value) 
							|| (this._LastUpdatedBySystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LastUpdatedBySystemUser.Entity = null;
						previousValue.LastUpdatedBySystemUserMinistries.Remove(this);
					}
					this._LastUpdatedBySystemUser.Entity = value;
					if ((value != null))
					{
						value.LastUpdatedBySystemUserMinistries.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("LastUpdatedBySystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_SystemUserMinistry", Storage="_Ministry", ThisKey="MinistryId", OtherKey="Id", IsForeignKey=true)]
		public Ministry Ministry
		{
			get
			{
				return this._Ministry.Entity;
			}
			set
			{
				Ministry previousValue = this._Ministry.Entity;
				if (((previousValue != value) 
							|| (this._Ministry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ministry.Entity = null;
						previousValue.SystemUserMinistries.Remove(this);
					}
					this._Ministry.Entity = value;
					if ((value != null))
					{
						value.SystemUserMinistries.Add(this);
						this._MinistryId = value.Id;
					}
					else
					{
						this._MinistryId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Ministry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.NewsFeed")]
	public partial class NewsFeed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ActivityId;
		
		private System.Guid _MinistryId;
		
		private string _Text;
		
		private string _Description;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Ministry> _Ministry;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(System.Nullable<int> value);
    partial void OnActivityIdChanged();
    partial void OnMinistryIdChanging(System.Guid value);
    partial void OnMinistryIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public NewsFeed()
		{
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Ministry = default(EntityRef<Ministry>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MinistryId
		{
			get
			{
				return this._MinistryId;
			}
			set
			{
				if ((this._MinistryId != value))
				{
					if (this._Ministry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMinistryIdChanging(value);
					this.SendPropertyChanging();
					this._MinistryId = value;
					this.SendPropertyChanged("MinistryId");
					this.OnMinistryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_NewsFeed", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.NewsFeeds.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.NewsFeeds.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_NewsFeed1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.NewsFeeds1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.NewsFeeds1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_NewsFeed", Storage="_Ministry", ThisKey="MinistryId", OtherKey="Id", IsForeignKey=true)]
		public Ministry Ministry
		{
			get
			{
				return this._Ministry.Entity;
			}
			set
			{
				Ministry previousValue = this._Ministry.Entity;
				if (((previousValue != value) 
							|| (this._Ministry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ministry.Entity = null;
						previousValue.NewsFeeds.Remove(this);
					}
					this._Ministry.Entity = value;
					if ((value != null))
					{
						value.NewsFeeds.Add(this);
						this._MinistryId = value.Id;
					}
					else
					{
						this._MinistryId = default(System.Guid);
					}
					this.SendPropertyChanged("Ministry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_NewsFeed", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.NewsFeeds.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.NewsFeeds.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _SortOrder;
		
		private bool _IsActive;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntitySet<ActivityCategory> _ActivityCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public Category()
		{
			this._ActivityCategories = new EntitySet<ActivityCategory>(new Action<ActivityCategory>(this.attach_ActivityCategories), new Action<ActivityCategory>(this.detach_ActivityCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_ActivityCategory", Storage="_ActivityCategories", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<ActivityCategory> ActivityCategories
		{
			get
			{
				return this._ActivityCategories;
			}
			set
			{
				this._ActivityCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityCategories(ActivityCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_ActivityCategories(ActivityCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.CommunicationMaterial")]
	public partial class CommunicationMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntitySet<ActivityCommunicationMaterial> _ActivityCommunicationMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public CommunicationMaterial()
		{
			this._ActivityCommunicationMaterials = new EntitySet<ActivityCommunicationMaterial>(new Action<ActivityCommunicationMaterial>(this.attach_ActivityCommunicationMaterials), new Action<ActivityCommunicationMaterial>(this.detach_ActivityCommunicationMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunicationMaterial_ActivityCommunicationMaterial", Storage="_ActivityCommunicationMaterials", ThisKey="Id", OtherKey="CommunicationMaterialId")]
		public EntitySet<ActivityCommunicationMaterial> ActivityCommunicationMaterials
		{
			get
			{
				return this._ActivityCommunicationMaterials;
			}
			set
			{
				this._ActivityCommunicationMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityCommunicationMaterials(ActivityCommunicationMaterial entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationMaterial = this;
		}
		
		private void detach_ActivityCommunicationMaterials(ActivityCommunicationMaterial entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationMaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.NROrigin")]
	public partial class NROrigin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntitySet<ActivityNROrigin> _ActivityNROrigins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public NROrigin()
		{
			this._ActivityNROrigins = new EntitySet<ActivityNROrigin>(new Action<ActivityNROrigin>(this.attach_ActivityNROrigins), new Action<ActivityNROrigin>(this.detach_ActivityNROrigins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NROrigin_ActivityNROrigin", Storage="_ActivityNROrigins", ThisKey="Id", OtherKey="NROriginId")]
		public EntitySet<ActivityNROrigin> ActivityNROrigins
		{
			get
			{
				return this._ActivityNROrigins;
			}
			set
			{
				this._ActivityNROrigins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityNROrigins(ActivityNROrigin entity)
		{
			this.SendPropertyChanging();
			entity.NROrigin = this;
		}
		
		private void detach_ActivityNROrigins(ActivityNROrigin entity)
		{
			this.SendPropertyChanging();
			entity.NROrigin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.CommunicationContact")]
	public partial class CommunicationContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SystemUserId;
		
		private string _Name;
		
		private string _MinistryShortName;
		
		private System.Guid _MinistryId;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private EntitySet<Activity> _Activities;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<Ministry> _Ministry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSystemUserIdChanging(int value);
    partial void OnSystemUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMinistryShortNameChanging(string value);
    partial void OnMinistryShortNameChanged();
    partial void OnMinistryIdChanging(System.Guid value);
    partial void OnMinistryIdChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    #endregion
		
		public CommunicationContact()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._SystemUser = default(EntityRef<SystemUser>);
			this._Ministry = default(EntityRef<Ministry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemUserId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SystemUserId
		{
			get
			{
				return this._SystemUserId;
			}
			set
			{
				if ((this._SystemUserId != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystemUserIdChanging(value);
					this.SendPropertyChanging();
					this._SystemUserId = value;
					this.SendPropertyChanged("SystemUserId");
					this.OnSystemUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryShortName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MinistryShortName
		{
			get
			{
				return this._MinistryShortName;
			}
			set
			{
				if ((this._MinistryShortName != value))
				{
					this.OnMinistryShortNameChanging(value);
					this.SendPropertyChanging();
					this._MinistryShortName = value;
					this.SendPropertyChanged("MinistryShortName");
					this.OnMinistryShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MinistryId
		{
			get
			{
				return this._MinistryId;
			}
			set
			{
				if ((this._MinistryId != value))
				{
					if (this._Ministry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMinistryIdChanging(value);
					this.SendPropertyChanging();
					this._MinistryId = value;
					this.SendPropertyChanged("MinistryId");
					this.OnMinistryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunicationContact_Activity", Storage="_Activities", ThisKey="Id", OtherKey="CommunicationContactId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_CommunicationContact", Storage="_SystemUser", ThisKey="SystemUserId", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.CommunicationContacts.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.CommunicationContacts.Add(this);
						this._SystemUserId = value.Id;
					}
					else
					{
						this._SystemUserId = default(int);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_CommunicationContact", Storage="_Ministry", ThisKey="MinistryId", OtherKey="Id", IsForeignKey=true)]
		public Ministry Ministry
		{
			get
			{
				return this._Ministry.Entity;
			}
			set
			{
				Ministry previousValue = this._Ministry.Entity;
				if (((previousValue != value) 
							|| (this._Ministry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ministry.Entity = null;
						previousValue.CommunicationContacts.Remove(this);
					}
					this._Ministry.Entity = value;
					if ((value != null))
					{
						value.CommunicationContacts.Add(this);
						this._MinistryId = value.Id;
					}
					else
					{
						this._MinistryId = default(System.Guid);
					}
					this.SendPropertyChanged("Ministry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationContact = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationContact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.NRDistribution")]
	public partial class NRDistribution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _SortOrder;
		
		private bool _IsActive;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public NRDistribution()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NRDistribution_Activity", Storage="_Activities", ThisKey="Id", OtherKey="NRDistributionId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.NRDistribution = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.NRDistribution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.PremierRequested")]
	public partial class PremierRequested : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public PremierRequested()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PremierRequested_Activity", Storage="_Activities", ThisKey="Id", OtherKey="PremierRequestedId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.PremierRequested = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.PremierRequested = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.GovernmentRepresentative")]
	public partial class GovernmentRepresentative : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    #endregion
		
		public GovernmentRepresentative()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(84)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GovernmentRepresentative_Activity", Storage="_Activities", ThisKey="Id", OtherKey="GovernmentRepresentativeId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.GovernmentRepresentative = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.GovernmentRepresentative = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.EventPlanner")]
	public partial class EventPlanner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _PhoneNumber;
		
		private string _JobTitle;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    #endregion
		
		public EventPlanner()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventPlanner_Activity", Storage="_Activities", ThisKey="Id", OtherKey="EventPlannerId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.EventPlanner = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.EventPlanner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private System.Nullable<int> _SortOrder;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    #endregion
		
		public City()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Activity", Storage="_Activities", ThisKey="Id", OtherKey="CityId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.Videographer")]
	public partial class Videographer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _JobTitle;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    #endregion
		
		public Videographer()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Videographer_Activity", Storage="_Activities", ThisKey="Id", OtherKey="VideographerId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Videographer = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Videographer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private bool _IsActive;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<Activity> _Activities1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public Status()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._Activities1 = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities1), new Action<Activity>(this.detach_Activities1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Activity", Storage="_Activities", ThisKey="Id", OtherKey="HqStatusId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Activity1", Storage="_Activities1", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<Activity> Activities1
		{
			get
			{
				return this._Activities1;
			}
			set
			{
				this._Activities1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
		
		private void attach_Activities1(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = this;
		}
		
		private void detach_Activities1(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActiveDistinctCommunicationContacts")]
	public partial class ActiveDistinctCommunicationContact
	{
		
		private int _SystemUserId;
		
		private string _NameAndNumber;
		
		private string _Name;
		
		private System.Nullable<int> _SortOrder;
		
		public ActiveDistinctCommunicationContact()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemUserId", DbType="Int NOT NULL")]
		public int SystemUserId
		{
			get
			{
				return this._SystemUserId;
			}
			set
			{
				if ((this._SystemUserId != value))
				{
					this._SystemUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAndNumber", DbType="NVarChar(101)")]
		public string NameAndNumber
		{
			get
			{
				return this._NameAndNumber;
			}
			set
			{
				if ((this._NameAndNumber != value))
				{
					this._NameAndNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActiveCommunicationContacts")]
	public partial class ActiveCommunicationContact
	{
		
		private int _Id;
		
		private int _SystemUserId;
		
		private string _NameAndNumber;
		
		private string _MinistryShortName;
		
		private string _Name;
		
		private System.Guid _MinistryId;
		
		private System.Nullable<System.Guid> _Expr1;
		
		private System.Nullable<int> _SortOrder;
		
		public ActiveCommunicationContact()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemUserId", DbType="Int NOT NULL")]
		public int SystemUserId
		{
			get
			{
				return this._SystemUserId;
			}
			set
			{
				if ((this._SystemUserId != value))
				{
					this._SystemUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAndNumber", DbType="NVarChar(151)")]
		public string NameAndNumber
		{
			get
			{
				return this._NameAndNumber;
			}
			set
			{
				if ((this._NameAndNumber != value))
				{
					this._NameAndNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryShortName", DbType="VarChar(50)")]
		public string MinistryShortName
		{
			get
			{
				return this._MinistryShortName;
			}
			set
			{
				if ((this._MinistryShortName != value))
				{
					this._MinistryShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MinistryId
		{
			get
			{
				return this._MinistryId;
			}
			set
			{
				if ((this._MinistryId != value))
				{
					this._MinistryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ministry")]
	public partial class Ministry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Key;
		
		private int _SortOrder;
		
		private string _DisplayName;
		
		private string _Abbreviation;
		
		private bool _IsActive;
		
		private string _MinisterEmail;
		
		private string _MinisterPhotoUrl;
		
		private string _MinisterPageHtml;
		
		private System.DateTime _Timestamp;
		
		private string _MiscHtml;
		
		private string _MiscRightHtml;
		
		private string _TwitterUsername;
		
		private string _FlickrUrl;
		
		private string _YoutubeUrl;
		
		private string _AudioUrl;
		
		private string _FacebookEmbedHtml;
		
		private string _YoutubeEmbedHtml;
		
		private string _AudioEmbedHtml;
		
		private System.Nullable<System.Guid> _TopReleaseId;
		
		private System.Nullable<System.Guid> _FeatureReleaseId;
		
		private string _MinisterAddress;
		
		private string _MinisterName;
		
		private string _MinisterSummary;
		
		private string _MinistryUrl;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private System.Nullable<int> _ContactUserId;
		
		private System.Nullable<int> _SecondContactUserId;
		
		private string _WeekendContactNumber;
		
		private System.Nullable<System.DateTimeOffset> _EodFinalizedDateTime;
		
		private System.Nullable<int> _EodLastRunUserId;
		
		private System.Nullable<System.DateTimeOffset> _EodLastRunDateTime;
		
		private string _DisplayAdditionalName;
		
		private EntitySet<ActivitySharedWith> _ActivitySharedWiths;
		
		private EntitySet<SystemUserMinistry> _SystemUserMinistries;
		
		private EntitySet<NewsFeed> _NewsFeeds;
		
		private EntitySet<CommunicationContact> _CommunicationContacts;
		
		private EntitySet<Ministry> _Ministries;
		
		private EntitySet<Activity> _Activities;
		
		private EntityRef<SystemUser> _ContactUser;
		
		private EntityRef<SystemUser> _EodLastRunUser;
		
		private EntityRef<Ministry> _ParentMinistry;
		
		private EntityRef<SystemUser> _SecondContactUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnMinisterEmailChanging(string value);
    partial void OnMinisterEmailChanged();
    partial void OnMinisterPhotoUrlChanging(string value);
    partial void OnMinisterPhotoUrlChanged();
    partial void OnMinisterPageHtmlChanging(string value);
    partial void OnMinisterPageHtmlChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnMiscHtmlChanging(string value);
    partial void OnMiscHtmlChanged();
    partial void OnMiscRightHtmlChanging(string value);
    partial void OnMiscRightHtmlChanged();
    partial void OnTwitterUsernameChanging(string value);
    partial void OnTwitterUsernameChanged();
    partial void OnFlickrUrlChanging(string value);
    partial void OnFlickrUrlChanged();
    partial void OnYoutubeUrlChanging(string value);
    partial void OnYoutubeUrlChanged();
    partial void OnAudioUrlChanging(string value);
    partial void OnAudioUrlChanged();
    partial void OnFacebookEmbedHtmlChanging(string value);
    partial void OnFacebookEmbedHtmlChanged();
    partial void OnYoutubeEmbedHtmlChanging(string value);
    partial void OnYoutubeEmbedHtmlChanged();
    partial void OnAudioEmbedHtmlChanging(string value);
    partial void OnAudioEmbedHtmlChanged();
    partial void OnTopReleaseIdChanging(System.Nullable<System.Guid> value);
    partial void OnTopReleaseIdChanged();
    partial void OnFeatureReleaseIdChanging(System.Nullable<System.Guid> value);
    partial void OnFeatureReleaseIdChanged();
    partial void OnMinisterAddressChanging(string value);
    partial void OnMinisterAddressChanged();
    partial void OnMinisterNameChanging(string value);
    partial void OnMinisterNameChanged();
    partial void OnMinisterSummaryChanging(string value);
    partial void OnMinisterSummaryChanged();
    partial void OnMinistryUrlChanging(string value);
    partial void OnMinistryUrlChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OnContactUserIdChanging(System.Nullable<int> value);
    partial void OnContactUserIdChanged();
    partial void OnSecondContactUserIdChanging(System.Nullable<int> value);
    partial void OnSecondContactUserIdChanged();
    partial void OnWeekendContactNumberChanging(string value);
    partial void OnWeekendContactNumberChanged();
    partial void OnEodFinalizedDateTimeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnEodFinalizedDateTimeChanged();
    partial void OnEodLastRunUserIdChanging(System.Nullable<int> value);
    partial void OnEodLastRunUserIdChanged();
    partial void OnEodLastRunDateTimeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnEodLastRunDateTimeChanged();
    partial void OnDisplayAdditionalNameChanging(string value);
    partial void OnDisplayAdditionalNameChanged();
    #endregion
		
		public Ministry()
		{
			this._ActivitySharedWiths = new EntitySet<ActivitySharedWith>(new Action<ActivitySharedWith>(this.attach_ActivitySharedWiths), new Action<ActivitySharedWith>(this.detach_ActivitySharedWiths));
			this._SystemUserMinistries = new EntitySet<SystemUserMinistry>(new Action<SystemUserMinistry>(this.attach_SystemUserMinistries), new Action<SystemUserMinistry>(this.detach_SystemUserMinistries));
			this._NewsFeeds = new EntitySet<NewsFeed>(new Action<NewsFeed>(this.attach_NewsFeeds), new Action<NewsFeed>(this.detach_NewsFeeds));
			this._CommunicationContacts = new EntitySet<CommunicationContact>(new Action<CommunicationContact>(this.attach_CommunicationContacts), new Action<CommunicationContact>(this.detach_CommunicationContacts));
			this._Ministries = new EntitySet<Ministry>(new Action<Ministry>(this.attach_Ministries), new Action<Ministry>(this.detach_Ministries));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._ContactUser = default(EntityRef<SystemUser>);
			this._EodLastRunUser = default(EntityRef<SystemUser>);
			this._ParentMinistry = default(EntityRef<Ministry>);
			this._SecondContactUser = default(EntityRef<SystemUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinisterEmail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MinisterEmail
		{
			get
			{
				return this._MinisterEmail;
			}
			set
			{
				if ((this._MinisterEmail != value))
				{
					this.OnMinisterEmailChanging(value);
					this.SendPropertyChanging();
					this._MinisterEmail = value;
					this.SendPropertyChanged("MinisterEmail");
					this.OnMinisterEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinisterPhotoUrl", DbType="NVarChar(255) NULL")]
		public string MinisterPhotoUrl
		{
			get
			{
				return this._MinisterPhotoUrl;
			}
			set
			{
				if ((this._MinisterPhotoUrl != value))
				{
					this.OnMinisterPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._MinisterPhotoUrl = value;
					this.SendPropertyChanged("MinisterPhotoUrl");
					this.OnMinisterPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinisterPageHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MinisterPageHtml
		{
			get
			{
				return this._MinisterPageHtml;
			}
			set
			{
				if ((this._MinisterPageHtml != value))
				{
					this.OnMinisterPageHtmlChanging(value);
					this.SendPropertyChanging();
					this._MinisterPageHtml = value;
					this.SendPropertyChanged("MinisterPageHtml");
					this.OnMinisterPageHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiscHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MiscHtml
		{
			get
			{
				return this._MiscHtml;
			}
			set
			{
				if ((this._MiscHtml != value))
				{
					this.OnMiscHtmlChanging(value);
					this.SendPropertyChanging();
					this._MiscHtml = value;
					this.SendPropertyChanged("MiscHtml");
					this.OnMiscHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiscRightHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MiscRightHtml
		{
			get
			{
				return this._MiscRightHtml;
			}
			set
			{
				if ((this._MiscRightHtml != value))
				{
					this.OnMiscRightHtmlChanging(value);
					this.SendPropertyChanging();
					this._MiscRightHtml = value;
					this.SendPropertyChanged("MiscRightHtml");
					this.OnMiscRightHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwitterUsername", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TwitterUsername
		{
			get
			{
				return this._TwitterUsername;
			}
			set
			{
				if ((this._TwitterUsername != value))
				{
					this.OnTwitterUsernameChanging(value);
					this.SendPropertyChanging();
					this._TwitterUsername = value;
					this.SendPropertyChanged("TwitterUsername");
					this.OnTwitterUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlickrUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FlickrUrl
		{
			get
			{
				return this._FlickrUrl;
			}
			set
			{
				if ((this._FlickrUrl != value))
				{
					this.OnFlickrUrlChanging(value);
					this.SendPropertyChanging();
					this._FlickrUrl = value;
					this.SendPropertyChanged("FlickrUrl");
					this.OnFlickrUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string YoutubeUrl
		{
			get
			{
				return this._YoutubeUrl;
			}
			set
			{
				if ((this._YoutubeUrl != value))
				{
					this.OnYoutubeUrlChanging(value);
					this.SendPropertyChanging();
					this._YoutubeUrl = value;
					this.SendPropertyChanged("YoutubeUrl");
					this.OnYoutubeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AudioUrl
		{
			get
			{
				return this._AudioUrl;
			}
			set
			{
				if ((this._AudioUrl != value))
				{
					this.OnAudioUrlChanging(value);
					this.SendPropertyChanging();
					this._AudioUrl = value;
					this.SendPropertyChanged("AudioUrl");
					this.OnAudioUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookEmbedHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FacebookEmbedHtml
		{
			get
			{
				return this._FacebookEmbedHtml;
			}
			set
			{
				if ((this._FacebookEmbedHtml != value))
				{
					this.OnFacebookEmbedHtmlChanging(value);
					this.SendPropertyChanging();
					this._FacebookEmbedHtml = value;
					this.SendPropertyChanged("FacebookEmbedHtml");
					this.OnFacebookEmbedHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeEmbedHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string YoutubeEmbedHtml
		{
			get
			{
				return this._YoutubeEmbedHtml;
			}
			set
			{
				if ((this._YoutubeEmbedHtml != value))
				{
					this.OnYoutubeEmbedHtmlChanging(value);
					this.SendPropertyChanging();
					this._YoutubeEmbedHtml = value;
					this.SendPropertyChanged("YoutubeEmbedHtml");
					this.OnYoutubeEmbedHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioEmbedHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AudioEmbedHtml
		{
			get
			{
				return this._AudioEmbedHtml;
			}
			set
			{
				if ((this._AudioEmbedHtml != value))
				{
					this.OnAudioEmbedHtmlChanging(value);
					this.SendPropertyChanging();
					this._AudioEmbedHtml = value;
					this.SendPropertyChanged("AudioEmbedHtml");
					this.OnAudioEmbedHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopReleaseId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TopReleaseId
		{
			get
			{
				return this._TopReleaseId;
			}
			set
			{
				if ((this._TopReleaseId != value))
				{
					this.OnTopReleaseIdChanging(value);
					this.SendPropertyChanging();
					this._TopReleaseId = value;
					this.SendPropertyChanged("TopReleaseId");
					this.OnTopReleaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureReleaseId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FeatureReleaseId
		{
			get
			{
				return this._FeatureReleaseId;
			}
			set
			{
				if ((this._FeatureReleaseId != value))
				{
					this.OnFeatureReleaseIdChanging(value);
					this.SendPropertyChanging();
					this._FeatureReleaseId = value;
					this.SendPropertyChanged("FeatureReleaseId");
					this.OnFeatureReleaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinisterAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MinisterAddress
		{
			get
			{
				return this._MinisterAddress;
			}
			set
			{
				if ((this._MinisterAddress != value))
				{
					this.OnMinisterAddressChanging(value);
					this.SendPropertyChanging();
					this._MinisterAddress = value;
					this.SendPropertyChanged("MinisterAddress");
					this.OnMinisterAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinisterName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MinisterName
		{
			get
			{
				return this._MinisterName;
			}
			set
			{
				if ((this._MinisterName != value))
				{
					this.OnMinisterNameChanging(value);
					this.SendPropertyChanging();
					this._MinisterName = value;
					this.SendPropertyChanged("MinisterName");
					this.OnMinisterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinisterSummary", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MinisterSummary
		{
			get
			{
				return this._MinisterSummary;
			}
			set
			{
				if ((this._MinisterSummary != value))
				{
					this.OnMinisterSummaryChanging(value);
					this.SendPropertyChanging();
					this._MinisterSummary = value;
					this.SendPropertyChanged("MinisterSummary");
					this.OnMinisterSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryUrl", DbType="NVarChar(255)")]
		public string MinistryUrl
		{
			get
			{
				return this._MinistryUrl;
			}
			set
			{
				if ((this._MinistryUrl != value))
				{
					this.OnMinistryUrlChanging(value);
					this.SendPropertyChanging();
					this._MinistryUrl = value;
					this.SendPropertyChanged("MinistryUrl");
					this.OnMinistryUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._ParentMinistry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactUserId", DbType="Int")]
		public System.Nullable<int> ContactUserId
		{
			get
			{
				return this._ContactUserId;
			}
			set
			{
				if ((this._ContactUserId != value))
				{
					if (this._ContactUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactUserIdChanging(value);
					this.SendPropertyChanging();
					this._ContactUserId = value;
					this.SendPropertyChanged("ContactUserId");
					this.OnContactUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondContactUserId", DbType="Int")]
		public System.Nullable<int> SecondContactUserId
		{
			get
			{
				return this._SecondContactUserId;
			}
			set
			{
				if ((this._SecondContactUserId != value))
				{
					if (this._SecondContactUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecondContactUserIdChanging(value);
					this.SendPropertyChanging();
					this._SecondContactUserId = value;
					this.SendPropertyChanged("SecondContactUserId");
					this.OnSecondContactUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekendContactNumber", DbType="VarChar(20)")]
		public string WeekendContactNumber
		{
			get
			{
				return this._WeekendContactNumber;
			}
			set
			{
				if ((this._WeekendContactNumber != value))
				{
					this.OnWeekendContactNumberChanging(value);
					this.SendPropertyChanging();
					this._WeekendContactNumber = value;
					this.SendPropertyChanged("WeekendContactNumber");
					this.OnWeekendContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EodFinalizedDateTime", DbType="DateTimeOffset", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTimeOffset> EodFinalizedDateTime
		{
			get
			{
				return this._EodFinalizedDateTime;
			}
			set
			{
				if ((this._EodFinalizedDateTime != value))
				{
					this.OnEodFinalizedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EodFinalizedDateTime = value;
					this.SendPropertyChanged("EodFinalizedDateTime");
					this.OnEodFinalizedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EodLastRunUserId", DbType="Int")]
		public System.Nullable<int> EodLastRunUserId
		{
			get
			{
				return this._EodLastRunUserId;
			}
			set
			{
				if ((this._EodLastRunUserId != value))
				{
					if (this._EodLastRunUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEodLastRunUserIdChanging(value);
					this.SendPropertyChanging();
					this._EodLastRunUserId = value;
					this.SendPropertyChanged("EodLastRunUserId");
					this.OnEodLastRunUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EodLastRunDateTime", DbType="DateTimeOffset", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTimeOffset> EodLastRunDateTime
		{
			get
			{
				return this._EodLastRunDateTime;
			}
			set
			{
				if ((this._EodLastRunDateTime != value))
				{
					this.OnEodLastRunDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EodLastRunDateTime = value;
					this.SendPropertyChanged("EodLastRunDateTime");
					this.OnEodLastRunDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayAdditionalName", DbType="NVarChar(255) NULL")]
		public string DisplayAdditionalName
		{
			get
			{
				return this._DisplayAdditionalName;
			}
			set
			{
				if ((this._DisplayAdditionalName != value))
				{
					this.OnDisplayAdditionalNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayAdditionalName = value;
					this.SendPropertyChanged("DisplayAdditionalName");
					this.OnDisplayAdditionalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_ActivitySharedWith", Storage="_ActivitySharedWiths", ThisKey="Id", OtherKey="MinistryId")]
		public EntitySet<ActivitySharedWith> ActivitySharedWiths
		{
			get
			{
				return this._ActivitySharedWiths;
			}
			set
			{
				this._ActivitySharedWiths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_SystemUserMinistry", Storage="_SystemUserMinistries", ThisKey="Id", OtherKey="MinistryId")]
		public EntitySet<SystemUserMinistry> SystemUserMinistries
		{
			get
			{
				return this._SystemUserMinistries;
			}
			set
			{
				this._SystemUserMinistries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_NewsFeed", Storage="_NewsFeeds", ThisKey="Id", OtherKey="MinistryId")]
		public EntitySet<NewsFeed> NewsFeeds
		{
			get
			{
				return this._NewsFeeds;
			}
			set
			{
				this._NewsFeeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_CommunicationContact", Storage="_CommunicationContacts", ThisKey="Id", OtherKey="MinistryId")]
		public EntitySet<CommunicationContact> CommunicationContacts
		{
			get
			{
				return this._CommunicationContacts;
			}
			set
			{
				this._CommunicationContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_Ministry", Storage="_Ministries", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<Ministry> Ministries
		{
			get
			{
				return this._Ministries;
			}
			set
			{
				this._Ministries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_Activity", Storage="_Activities", ThisKey="Id", OtherKey="ContactMinistryId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Ministry", Storage="_ContactUser", ThisKey="ContactUserId", OtherKey="Id", IsForeignKey=true)]
		public SystemUser ContactUser
		{
			get
			{
				return this._ContactUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._ContactUser.Entity;
				if (((previousValue != value) 
							|| (this._ContactUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactUser.Entity = null;
						previousValue.Ministries.Remove(this);
					}
					this._ContactUser.Entity = value;
					if ((value != null))
					{
						value.Ministries.Add(this);
						this._ContactUserId = value.Id;
					}
					else
					{
						this._ContactUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContactUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Ministry1", Storage="_EodLastRunUser", ThisKey="EodLastRunUserId", OtherKey="Id", IsForeignKey=true)]
		public SystemUser EodLastRunUser
		{
			get
			{
				return this._EodLastRunUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._EodLastRunUser.Entity;
				if (((previousValue != value) 
							|| (this._EodLastRunUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EodLastRunUser.Entity = null;
						previousValue.Ministries1.Remove(this);
					}
					this._EodLastRunUser.Entity = value;
					if ((value != null))
					{
						value.Ministries1.Add(this);
						this._EodLastRunUserId = value.Id;
					}
					else
					{
						this._EodLastRunUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EodLastRunUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_Ministry", Storage="_ParentMinistry", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public Ministry ParentMinistry
		{
			get
			{
				return this._ParentMinistry.Entity;
			}
			set
			{
				Ministry previousValue = this._ParentMinistry.Entity;
				if (((previousValue != value) 
							|| (this._ParentMinistry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentMinistry.Entity = null;
						previousValue.Ministries.Remove(this);
					}
					this._ParentMinistry.Entity = value;
					if ((value != null))
					{
						value.Ministries.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ParentMinistry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Ministry2", Storage="_SecondContactUser", ThisKey="SecondContactUserId", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SecondContactUser
		{
			get
			{
				return this._SecondContactUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SecondContactUser.Entity;
				if (((previousValue != value) 
							|| (this._SecondContactUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecondContactUser.Entity = null;
						previousValue.Ministries2.Remove(this);
					}
					this._SecondContactUser.Entity = value;
					if ((value != null))
					{
						value.Ministries2.Add(this);
						this._SecondContactUserId = value.Id;
					}
					else
					{
						this._SecondContactUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("SecondContactUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivitySharedWiths(ActivitySharedWith entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = this;
		}
		
		private void detach_ActivitySharedWiths(ActivitySharedWith entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = null;
		}
		
		private void attach_SystemUserMinistries(SystemUserMinistry entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = this;
		}
		
		private void detach_SystemUserMinistries(SystemUserMinistry entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = null;
		}
		
		private void attach_NewsFeeds(NewsFeed entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = this;
		}
		
		private void detach_NewsFeeds(NewsFeed entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = null;
		}
		
		private void attach_CommunicationContacts(CommunicationContact entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = this;
		}
		
		private void detach_CommunicationContacts(CommunicationContact entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = null;
		}
		
		private void attach_Ministries(Ministry entity)
		{
			this.SendPropertyChanging();
			entity.ParentMinistry = this;
		}
		
		private void detach_Ministries(Ministry entity)
		{
			this.SendPropertyChanging();
			entity.ParentMinistry = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sector")]
	public partial class Sector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Key;
		
		private int _SortOrder;
		
		private bool _IsActive;
		
		private string _DisplayName;
		
		private System.DateTime _Timestamp;
		
		private string _MiscHtml;
		
		private string _MiscRightHtml;
		
		private string _TwitterUsername;
		
		private string _FlickrUrl;
		
		private string _YoutubeUrl;
		
		private string _AudioUrl;
		
		private string _FacebookEmbedHtml;
		
		private string _YoutubeEmbedHtml;
		
		private string _AudioEmbedHtml;
		
		private System.Nullable<System.Guid> _TopReleaseId;
		
		private System.Nullable<System.Guid> _FeatureReleaseId;
		
		private EntitySet<ActivitySector> _ActivitySectors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnMiscHtmlChanging(string value);
    partial void OnMiscHtmlChanged();
    partial void OnMiscRightHtmlChanging(string value);
    partial void OnMiscRightHtmlChanged();
    partial void OnTwitterUsernameChanging(string value);
    partial void OnTwitterUsernameChanged();
    partial void OnFlickrUrlChanging(string value);
    partial void OnFlickrUrlChanged();
    partial void OnYoutubeUrlChanging(string value);
    partial void OnYoutubeUrlChanged();
    partial void OnAudioUrlChanging(string value);
    partial void OnAudioUrlChanged();
    partial void OnFacebookEmbedHtmlChanging(string value);
    partial void OnFacebookEmbedHtmlChanged();
    partial void OnYoutubeEmbedHtmlChanging(string value);
    partial void OnYoutubeEmbedHtmlChanged();
    partial void OnAudioEmbedHtmlChanging(string value);
    partial void OnAudioEmbedHtmlChanged();
    partial void OnTopReleaseIdChanging(System.Nullable<System.Guid> value);
    partial void OnTopReleaseIdChanged();
    partial void OnFeatureReleaseIdChanging(System.Nullable<System.Guid> value);
    partial void OnFeatureReleaseIdChanged();
    #endregion
		
		public Sector()
		{
			this._ActivitySectors = new EntitySet<ActivitySector>(new Action<ActivitySector>(this.attach_ActivitySectors), new Action<ActivitySector>(this.detach_ActivitySectors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(255)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiscHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MiscHtml
		{
			get
			{
				return this._MiscHtml;
			}
			set
			{
				if ((this._MiscHtml != value))
				{
					this.OnMiscHtmlChanging(value);
					this.SendPropertyChanging();
					this._MiscHtml = value;
					this.SendPropertyChanged("MiscHtml");
					this.OnMiscHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiscRightHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MiscRightHtml
		{
			get
			{
				return this._MiscRightHtml;
			}
			set
			{
				if ((this._MiscRightHtml != value))
				{
					this.OnMiscRightHtmlChanging(value);
					this.SendPropertyChanging();
					this._MiscRightHtml = value;
					this.SendPropertyChanged("MiscRightHtml");
					this.OnMiscRightHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwitterUsername", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TwitterUsername
		{
			get
			{
				return this._TwitterUsername;
			}
			set
			{
				if ((this._TwitterUsername != value))
				{
					this.OnTwitterUsernameChanging(value);
					this.SendPropertyChanging();
					this._TwitterUsername = value;
					this.SendPropertyChanged("TwitterUsername");
					this.OnTwitterUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlickrUrl", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string FlickrUrl
		{
			get
			{
				return this._FlickrUrl;
			}
			set
			{
				if ((this._FlickrUrl != value))
				{
					this.OnFlickrUrlChanging(value);
					this.SendPropertyChanging();
					this._FlickrUrl = value;
					this.SendPropertyChanged("FlickrUrl");
					this.OnFlickrUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeUrl", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string YoutubeUrl
		{
			get
			{
				return this._YoutubeUrl;
			}
			set
			{
				if ((this._YoutubeUrl != value))
				{
					this.OnYoutubeUrlChanging(value);
					this.SendPropertyChanging();
					this._YoutubeUrl = value;
					this.SendPropertyChanged("YoutubeUrl");
					this.OnYoutubeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioUrl", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AudioUrl
		{
			get
			{
				return this._AudioUrl;
			}
			set
			{
				if ((this._AudioUrl != value))
				{
					this.OnAudioUrlChanging(value);
					this.SendPropertyChanging();
					this._AudioUrl = value;
					this.SendPropertyChanged("AudioUrl");
					this.OnAudioUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookEmbedHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FacebookEmbedHtml
		{
			get
			{
				return this._FacebookEmbedHtml;
			}
			set
			{
				if ((this._FacebookEmbedHtml != value))
				{
					this.OnFacebookEmbedHtmlChanging(value);
					this.SendPropertyChanging();
					this._FacebookEmbedHtml = value;
					this.SendPropertyChanged("FacebookEmbedHtml");
					this.OnFacebookEmbedHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeEmbedHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string YoutubeEmbedHtml
		{
			get
			{
				return this._YoutubeEmbedHtml;
			}
			set
			{
				if ((this._YoutubeEmbedHtml != value))
				{
					this.OnYoutubeEmbedHtmlChanging(value);
					this.SendPropertyChanging();
					this._YoutubeEmbedHtml = value;
					this.SendPropertyChanged("YoutubeEmbedHtml");
					this.OnYoutubeEmbedHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioEmbedHtml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AudioEmbedHtml
		{
			get
			{
				return this._AudioEmbedHtml;
			}
			set
			{
				if ((this._AudioEmbedHtml != value))
				{
					this.OnAudioEmbedHtmlChanging(value);
					this.SendPropertyChanging();
					this._AudioEmbedHtml = value;
					this.SendPropertyChanged("AudioEmbedHtml");
					this.OnAudioEmbedHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopReleaseId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TopReleaseId
		{
			get
			{
				return this._TopReleaseId;
			}
			set
			{
				if ((this._TopReleaseId != value))
				{
					this.OnTopReleaseIdChanging(value);
					this.SendPropertyChanging();
					this._TopReleaseId = value;
					this.SendPropertyChanged("TopReleaseId");
					this.OnTopReleaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureReleaseId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FeatureReleaseId
		{
			get
			{
				return this._FeatureReleaseId;
			}
			set
			{
				if ((this._FeatureReleaseId != value))
				{
					this.OnFeatureReleaseIdChanging(value);
					this.SendPropertyChanging();
					this._FeatureReleaseId = value;
					this.SendPropertyChanged("FeatureReleaseId");
					this.OnFeatureReleaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sector_ActivitySector", Storage="_ActivitySectors", ThisKey="Id", OtherKey="SectorId")]
		public EntitySet<ActivitySector> ActivitySectors
		{
			get
			{
				return this._ActivitySectors;
			}
			set
			{
				this._ActivitySectors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivitySectors(ActivitySector entity)
		{
			this.SendPropertyChanging();
			entity.Sector = this;
		}
		
		private void detach_ActivitySectors(ActivitySector entity)
		{
			this.SendPropertyChanging();
			entity.Sector = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsActive;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntitySet<SystemUser> _SystemUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public Role()
		{
			this._SystemUsers = new EntitySet<SystemUser>(new Action<SystemUser>(this.attach_SystemUsers), new Action<SystemUser>(this.detach_SystemUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_SystemUser", Storage="_SystemUsers", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<SystemUser> SystemUsers
		{
			get
			{
				return this._SystemUsers;
			}
			set
			{
				this._SystemUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Theme")]
	public partial class Theme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Key;
		
		private string _DisplayName;
		
		private System.DateTime _Timestamp;
		
		private System.Nullable<System.Guid> _TopReleaseId;
		
		private System.Nullable<System.Guid> _FeatureReleaseId;
		
		private int _SortOrder;
		
		private bool _IsActive;
		
		private EntitySet<ActivityTheme> _ActivityThemes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnTopReleaseIdChanging(System.Nullable<System.Guid> value);
    partial void OnTopReleaseIdChanged();
    partial void OnFeatureReleaseIdChanging(System.Nullable<System.Guid> value);
    partial void OnFeatureReleaseIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Theme()
		{
			this._ActivityThemes = new EntitySet<ActivityTheme>(new Action<ActivityTheme>(this.attach_ActivityThemes), new Action<ActivityTheme>(this.detach_ActivityThemes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(255)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopReleaseId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> TopReleaseId
		{
			get
			{
				return this._TopReleaseId;
			}
			set
			{
				if ((this._TopReleaseId != value))
				{
					this.OnTopReleaseIdChanging(value);
					this.SendPropertyChanging();
					this._TopReleaseId = value;
					this.SendPropertyChanged("TopReleaseId");
					this.OnTopReleaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureReleaseId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> FeatureReleaseId
		{
			get
			{
				return this._FeatureReleaseId;
			}
			set
			{
				if ((this._FeatureReleaseId != value))
				{
					this.OnFeatureReleaseIdChanging(value);
					this.SendPropertyChanging();
					this._FeatureReleaseId = value;
					this.SendPropertyChanged("FeatureReleaseId");
					this.OnFeatureReleaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theme_ActivityTheme", Storage="_ActivityThemes", ThisKey="Id", OtherKey="ThemeId")]
		public EntitySet<ActivityTheme> ActivityThemes
		{
			get
			{
				return this._ActivityThemes;
			}
			set
			{
				this._ActivityThemes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityThemes(ActivityTheme entity)
		{
			this.SendPropertyChanging();
			entity.Theme = this;
		}
		
		private void detach_ActivityThemes(ActivityTheme entity)
		{
			this.SendPropertyChanging();
			entity.Theme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityThemes")]
	public partial class ActivityTheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityId;
		
		private System.Guid _ThemeId;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedDateTime;
		
		private int _CreatedBy;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private int _LastUpdatedBy;
		
		private EntityRef<Theme> _Theme;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnThemeIdChanging(System.Guid value);
    partial void OnThemeIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(int value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public ActivityTheme()
		{
			this._Theme = default(EntityRef<Theme>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ThemeId
		{
			get
			{
				return this._ThemeId;
			}
			set
			{
				if ((this._ThemeId != value))
				{
					if (this._Theme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThemeIdChanging(value);
					this.SendPropertyChanging();
					this._ThemeId = value;
					this.SendPropertyChanged("ThemeId");
					this.OnThemeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL")]
		public int LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theme_ActivityTheme", Storage="_Theme", ThisKey="ThemeId", OtherKey="Id", IsForeignKey=true)]
		public Theme Theme
		{
			get
			{
				return this._Theme.Entity;
			}
			set
			{
				Theme previousValue = this._Theme.Entity;
				if (((previousValue != value) 
							|| (this._Theme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Theme.Entity = null;
						previousValue.ActivityThemes.Remove(this);
					}
					this._Theme.Entity = value;
					if ((value != null))
					{
						value.ActivityThemes.Add(this);
						this._ThemeId = value.Id;
					}
					else
					{
						this._ThemeId = default(System.Guid);
					}
					this.SendPropertyChanged("Theme");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityTheme", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityThemes.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityThemes.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Key;
		
		private string _DisplayName;
		
		private int _SortOrder;
		
		private bool _IsActive;
		
		private EntitySet<ActivityTag> _ActivityTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Tag()
		{
			this._ActivityTags = new EntitySet<ActivityTag>(new Action<ActivityTag>(this.attach_ActivityTags), new Action<ActivityTag>(this.detach_ActivityTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(255)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActivityTag", Storage="_ActivityTags", ThisKey="Id", OtherKey="TagId")]
		public EntitySet<ActivityTag> ActivityTags
		{
			get
			{
				return this._ActivityTags;
			}
			set
			{
				this._ActivityTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityTags(ActivityTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_ActivityTags(ActivityTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityTags")]
	public partial class ActivityTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityId;
		
		private System.Guid _TagId;
		
		private bool _IsActive;
		
		private System.DateTime _CreatedDateTime;
		
		private int _CreatedBy;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private int _LastUpdatedBy;
		
		private EntityRef<Tag> _Tag;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnTagIdChanging(System.Guid value);
    partial void OnTagIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(int value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public ActivityTag()
		{
			this._Tag = default(EntityRef<Tag>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL")]
		public int LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_ActivityTag", Storage="_Tag", ThisKey="TagId", OtherKey="Id", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.ActivityTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.ActivityTags.Add(this);
						this._TagId = value.Id;
					}
					else
					{
						this._TagId = default(System.Guid);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityTag", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityTags.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityTags.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.Initiative")]
	public partial class Initiative : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _ShortName;
		
		private bool _IsActive;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntitySet<ActivityInitiative> _ActivityInitiatives;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public Initiative()
		{
			this._ActivityInitiatives = new EntitySet<ActivityInitiative>(new Action<ActivityInitiative>(this.attach_ActivityInitiatives), new Action<ActivityInitiative>(this.detach_ActivityInitiatives));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(40) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Initiative_ActivityInitiative", Storage="_ActivityInitiatives", ThisKey="Id", OtherKey="InitiativeId")]
		public EntitySet<ActivityInitiative> ActivityInitiatives
		{
			get
			{
				return this._ActivityInitiatives;
			}
			set
			{
				this._ActivityInitiatives.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityInitiatives(ActivityInitiative entity)
		{
			this.SendPropertyChanging();
			entity.Initiative = this;
		}
		
		private void detach_ActivityInitiatives(ActivityInitiative entity)
		{
			this.SendPropertyChanging();
			entity.Initiative = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityInitiatives")]
	public partial class ActivityInitiative : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActivityId;
		
		private int _InitiativeId;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private EntityRef<Initiative> _Initiative;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnInitiativeIdChanging(int value);
    partial void OnInitiativeIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    #endregion
		
		public ActivityInitiative()
		{
			this._Initiative = default(EntityRef<Initiative>);
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitiativeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InitiativeId
		{
			get
			{
				return this._InitiativeId;
			}
			set
			{
				if ((this._InitiativeId != value))
				{
					if (this._Initiative.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInitiativeIdChanging(value);
					this.SendPropertyChanging();
					this._InitiativeId = value;
					this.SendPropertyChanged("InitiativeId");
					this.OnInitiativeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Initiative_ActivityInitiative", Storage="_Initiative", ThisKey="InitiativeId", OtherKey="Id", IsForeignKey=true)]
		public Initiative Initiative
		{
			get
			{
				return this._Initiative.Entity;
			}
			set
			{
				Initiative previousValue = this._Initiative.Entity;
				if (((previousValue != value) 
							|| (this._Initiative.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Initiative.Entity = null;
						previousValue.ActivityInitiatives.Remove(this);
					}
					this._Initiative.Entity = value;
					if ((value != null))
					{
						value.ActivityInitiatives.Add(this);
						this._InitiativeId = value.Id;
					}
					else
					{
						this._InitiativeId = default(int);
					}
					this.SendPropertyChanged("Initiative");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityInitiative", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.ActivityInitiatives.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.ActivityInitiatives.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityInitiative1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.ActivityInitiatives1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.ActivityInitiatives1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityInitiative", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityInitiatives.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityInitiatives.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.SystemUser")]
	public partial class SystemUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private int _RoleId;
		
		private string _Description;
		
		private string _FullName;
		
		private string _DisplayName;
		
		private string _JobTitle;
		
		private string _PhoneNumber;
		
		private string _MobileNumber;
		
		private string _EmailAddress;
		
		private System.Nullable<int> _FilterDisplayValue;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Guid _RowGuid;
		
		private string _HiddenColumns;
		
		private EntitySet<ActivitySharedWith> _ActivitySharedWiths;
		
		private EntitySet<ActivitySharedWith> _ActivitySharedWiths1;
		
		private EntitySet<Log> _Logs;
		
		private EntitySet<Log> _Logs1;
		
		private EntitySet<ActivitySector> _ActivitySectors;
		
		private EntitySet<ActivitySector> _ActivitySectors1;
		
		private EntitySet<ActivityNROrigin> _ActivityNROrigins;
		
		private EntitySet<ActivityNROrigin> _ActivityNROrigins1;
		
		private EntitySet<ActivityCommunicationMaterial> _ActivityCommunicationMaterials;
		
		private EntitySet<ActivityCommunicationMaterial> _ActivityCommunicationMaterials1;
		
		private EntitySet<ActivityCategory> _ActivityCategories;
		
		private EntitySet<ActivityCategory> _ActivityCategories1;
		
		private EntitySet<ActivityFilter> _ActivityFilters;
		
		private EntitySet<ActivityFilter> _ActivityFilters1;
		
		private EntitySet<SystemUserMinistry> _SystemUserMinistries;
		
		private EntitySet<SystemUserMinistry> _CreatedBySystemUserMinistries;
		
		private EntitySet<SystemUserMinistry> _LastUpdatedBySystemUserMinistries;
		
		private EntitySet<NewsFeed> _NewsFeeds;
		
		private EntitySet<NewsFeed> _NewsFeeds1;
		
		private EntitySet<CommunicationContact> _CommunicationContacts;
		
		private EntitySet<Ministry> _Ministries;
		
		private EntitySet<Ministry> _Ministries1;
		
		private EntitySet<Ministry> _Ministries2;
		
		private EntitySet<ActivityInitiative> _ActivityInitiatives;
		
		private EntitySet<ActivityInitiative> _ActivityInitiatives1;
		
		private EntitySet<SystemUser> _SystemUsers;
		
		private EntitySet<SystemUser> _SystemUsers1;
		
		private EntitySet<FavoriteActivity> _FavoriteActivities;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<Activity> _Activities1;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<SystemUser> _SystemUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnFilterDisplayValueChanging(System.Nullable<int> value);
    partial void OnFilterDisplayValueChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Guid value);
    partial void OnRowGuidChanged();
    partial void OnHiddenColumnsChanging(string value);
    partial void OnHiddenColumnsChanged();
    #endregion
		
		public SystemUser()
		{
			this._ActivitySharedWiths = new EntitySet<ActivitySharedWith>(new Action<ActivitySharedWith>(this.attach_ActivitySharedWiths), new Action<ActivitySharedWith>(this.detach_ActivitySharedWiths));
			this._ActivitySharedWiths1 = new EntitySet<ActivitySharedWith>(new Action<ActivitySharedWith>(this.attach_ActivitySharedWiths1), new Action<ActivitySharedWith>(this.detach_ActivitySharedWiths1));
			this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
			this._Logs1 = new EntitySet<Log>(new Action<Log>(this.attach_Logs1), new Action<Log>(this.detach_Logs1));
			this._ActivitySectors = new EntitySet<ActivitySector>(new Action<ActivitySector>(this.attach_ActivitySectors), new Action<ActivitySector>(this.detach_ActivitySectors));
			this._ActivitySectors1 = new EntitySet<ActivitySector>(new Action<ActivitySector>(this.attach_ActivitySectors1), new Action<ActivitySector>(this.detach_ActivitySectors1));
			this._ActivityNROrigins = new EntitySet<ActivityNROrigin>(new Action<ActivityNROrigin>(this.attach_ActivityNROrigins), new Action<ActivityNROrigin>(this.detach_ActivityNROrigins));
			this._ActivityNROrigins1 = new EntitySet<ActivityNROrigin>(new Action<ActivityNROrigin>(this.attach_ActivityNROrigins1), new Action<ActivityNROrigin>(this.detach_ActivityNROrigins1));
			this._ActivityCommunicationMaterials = new EntitySet<ActivityCommunicationMaterial>(new Action<ActivityCommunicationMaterial>(this.attach_ActivityCommunicationMaterials), new Action<ActivityCommunicationMaterial>(this.detach_ActivityCommunicationMaterials));
			this._ActivityCommunicationMaterials1 = new EntitySet<ActivityCommunicationMaterial>(new Action<ActivityCommunicationMaterial>(this.attach_ActivityCommunicationMaterials1), new Action<ActivityCommunicationMaterial>(this.detach_ActivityCommunicationMaterials1));
			this._ActivityCategories = new EntitySet<ActivityCategory>(new Action<ActivityCategory>(this.attach_ActivityCategories), new Action<ActivityCategory>(this.detach_ActivityCategories));
			this._ActivityCategories1 = new EntitySet<ActivityCategory>(new Action<ActivityCategory>(this.attach_ActivityCategories1), new Action<ActivityCategory>(this.detach_ActivityCategories1));
			this._ActivityFilters = new EntitySet<ActivityFilter>(new Action<ActivityFilter>(this.attach_ActivityFilters), new Action<ActivityFilter>(this.detach_ActivityFilters));
			this._ActivityFilters1 = new EntitySet<ActivityFilter>(new Action<ActivityFilter>(this.attach_ActivityFilters1), new Action<ActivityFilter>(this.detach_ActivityFilters1));
			this._SystemUserMinistries = new EntitySet<SystemUserMinistry>(new Action<SystemUserMinistry>(this.attach_SystemUserMinistries), new Action<SystemUserMinistry>(this.detach_SystemUserMinistries));
			this._CreatedBySystemUserMinistries = new EntitySet<SystemUserMinistry>(new Action<SystemUserMinistry>(this.attach_CreatedBySystemUserMinistries), new Action<SystemUserMinistry>(this.detach_CreatedBySystemUserMinistries));
			this._LastUpdatedBySystemUserMinistries = new EntitySet<SystemUserMinistry>(new Action<SystemUserMinistry>(this.attach_LastUpdatedBySystemUserMinistries), new Action<SystemUserMinistry>(this.detach_LastUpdatedBySystemUserMinistries));
			this._NewsFeeds = new EntitySet<NewsFeed>(new Action<NewsFeed>(this.attach_NewsFeeds), new Action<NewsFeed>(this.detach_NewsFeeds));
			this._NewsFeeds1 = new EntitySet<NewsFeed>(new Action<NewsFeed>(this.attach_NewsFeeds1), new Action<NewsFeed>(this.detach_NewsFeeds1));
			this._CommunicationContacts = new EntitySet<CommunicationContact>(new Action<CommunicationContact>(this.attach_CommunicationContacts), new Action<CommunicationContact>(this.detach_CommunicationContacts));
			this._Ministries = new EntitySet<Ministry>(new Action<Ministry>(this.attach_Ministries), new Action<Ministry>(this.detach_Ministries));
			this._Ministries1 = new EntitySet<Ministry>(new Action<Ministry>(this.attach_Ministries1), new Action<Ministry>(this.detach_Ministries1));
			this._Ministries2 = new EntitySet<Ministry>(new Action<Ministry>(this.attach_Ministries2), new Action<Ministry>(this.detach_Ministries2));
			this._ActivityInitiatives = new EntitySet<ActivityInitiative>(new Action<ActivityInitiative>(this.attach_ActivityInitiatives), new Action<ActivityInitiative>(this.detach_ActivityInitiatives));
			this._ActivityInitiatives1 = new EntitySet<ActivityInitiative>(new Action<ActivityInitiative>(this.attach_ActivityInitiatives1), new Action<ActivityInitiative>(this.detach_ActivityInitiatives1));
			this._SystemUsers = new EntitySet<SystemUser>(new Action<SystemUser>(this.attach_SystemUsers), new Action<SystemUser>(this.detach_SystemUsers));
			this._SystemUsers1 = new EntitySet<SystemUser>(new Action<SystemUser>(this.attach_SystemUsers1), new Action<SystemUser>(this.detach_SystemUsers1));
			this._FavoriteActivities = new EntitySet<FavoriteActivity>(new Action<FavoriteActivity>(this.attach_FavoriteActivities), new Action<FavoriteActivity>(this.detach_FavoriteActivities));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._Activities1 = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities1), new Action<Activity>(this.detach_Activities1));
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Role = default(EntityRef<Role>);
			this._SystemUser2 = default(EntityRef<SystemUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterDisplayValue", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FilterDisplayValue
		{
			get
			{
				return this._FilterDisplayValue;
			}
			set
			{
				if ((this._FilterDisplayValue != value))
				{
					this.OnFilterDisplayValueChanging(value);
					this.SendPropertyChanging();
					this._FilterDisplayValue = value;
					this.SendPropertyChanged("FilterDisplayValue");
					this.OnFilterDisplayValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiddenColumns", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HiddenColumns
		{
			get
			{
				return this._HiddenColumns;
			}
			set
			{
				if ((this._HiddenColumns != value))
				{
					this.OnHiddenColumnsChanging(value);
					this.SendPropertyChanging();
					this._HiddenColumns = value;
					this.SendPropertyChanged("HiddenColumns");
					this.OnHiddenColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivitySharedWith", Storage="_ActivitySharedWiths", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<ActivitySharedWith> ActivitySharedWiths
		{
			get
			{
				return this._ActivitySharedWiths;
			}
			set
			{
				this._ActivitySharedWiths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivitySharedWith1", Storage="_ActivitySharedWiths1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<ActivitySharedWith> ActivitySharedWiths1
		{
			get
			{
				return this._ActivitySharedWiths1;
			}
			set
			{
				this._ActivitySharedWiths1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Log", Storage="_Logs", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<Log> Logs
		{
			get
			{
				return this._Logs;
			}
			set
			{
				this._Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Log1", Storage="_Logs1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<Log> Logs1
		{
			get
			{
				return this._Logs1;
			}
			set
			{
				this._Logs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivitySector", Storage="_ActivitySectors", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<ActivitySector> ActivitySectors
		{
			get
			{
				return this._ActivitySectors;
			}
			set
			{
				this._ActivitySectors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivitySector1", Storage="_ActivitySectors1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<ActivitySector> ActivitySectors1
		{
			get
			{
				return this._ActivitySectors1;
			}
			set
			{
				this._ActivitySectors1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityNROrigin", Storage="_ActivityNROrigins", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<ActivityNROrigin> ActivityNROrigins
		{
			get
			{
				return this._ActivityNROrigins;
			}
			set
			{
				this._ActivityNROrigins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityNROrigin1", Storage="_ActivityNROrigins1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<ActivityNROrigin> ActivityNROrigins1
		{
			get
			{
				return this._ActivityNROrigins1;
			}
			set
			{
				this._ActivityNROrigins1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityCommunicationMaterial", Storage="_ActivityCommunicationMaterials", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<ActivityCommunicationMaterial> ActivityCommunicationMaterials
		{
			get
			{
				return this._ActivityCommunicationMaterials;
			}
			set
			{
				this._ActivityCommunicationMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityCommunicationMaterial1", Storage="_ActivityCommunicationMaterials1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<ActivityCommunicationMaterial> ActivityCommunicationMaterials1
		{
			get
			{
				return this._ActivityCommunicationMaterials1;
			}
			set
			{
				this._ActivityCommunicationMaterials1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityCategory", Storage="_ActivityCategories", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<ActivityCategory> ActivityCategories
		{
			get
			{
				return this._ActivityCategories;
			}
			set
			{
				this._ActivityCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityCategory1", Storage="_ActivityCategories1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<ActivityCategory> ActivityCategories1
		{
			get
			{
				return this._ActivityCategories1;
			}
			set
			{
				this._ActivityCategories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityFilter", Storage="_ActivityFilters", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<ActivityFilter> ActivityFilters
		{
			get
			{
				return this._ActivityFilters;
			}
			set
			{
				this._ActivityFilters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityFilter1", Storage="_ActivityFilters1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<ActivityFilter> ActivityFilters1
		{
			get
			{
				return this._ActivityFilters1;
			}
			set
			{
				this._ActivityFilters1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUserMinistry", Storage="_SystemUserMinistries", ThisKey="Id", OtherKey="SystemUserId")]
		public EntitySet<SystemUserMinistry> SystemUserMinistries
		{
			get
			{
				return this._SystemUserMinistries;
			}
			set
			{
				this._SystemUserMinistries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUserMinistry1", Storage="_CreatedBySystemUserMinistries", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<SystemUserMinistry> CreatedBySystemUserMinistries
		{
			get
			{
				return this._CreatedBySystemUserMinistries;
			}
			set
			{
				this._CreatedBySystemUserMinistries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUserMinistry2", Storage="_LastUpdatedBySystemUserMinistries", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<SystemUserMinistry> LastUpdatedBySystemUserMinistries
		{
			get
			{
				return this._LastUpdatedBySystemUserMinistries;
			}
			set
			{
				this._LastUpdatedBySystemUserMinistries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_NewsFeed", Storage="_NewsFeeds", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<NewsFeed> NewsFeeds
		{
			get
			{
				return this._NewsFeeds;
			}
			set
			{
				this._NewsFeeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_NewsFeed1", Storage="_NewsFeeds1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<NewsFeed> NewsFeeds1
		{
			get
			{
				return this._NewsFeeds1;
			}
			set
			{
				this._NewsFeeds1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_CommunicationContact", Storage="_CommunicationContacts", ThisKey="Id", OtherKey="SystemUserId")]
		public EntitySet<CommunicationContact> CommunicationContacts
		{
			get
			{
				return this._CommunicationContacts;
			}
			set
			{
				this._CommunicationContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Ministry", Storage="_Ministries", ThisKey="Id", OtherKey="ContactUserId")]
		public EntitySet<Ministry> Ministries
		{
			get
			{
				return this._Ministries;
			}
			set
			{
				this._Ministries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Ministry1", Storage="_Ministries1", ThisKey="Id", OtherKey="EodLastRunUserId")]
		public EntitySet<Ministry> Ministries1
		{
			get
			{
				return this._Ministries1;
			}
			set
			{
				this._Ministries1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Ministry2", Storage="_Ministries2", ThisKey="Id", OtherKey="SecondContactUserId")]
		public EntitySet<Ministry> Ministries2
		{
			get
			{
				return this._Ministries2;
			}
			set
			{
				this._Ministries2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityInitiative", Storage="_ActivityInitiatives", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<ActivityInitiative> ActivityInitiatives
		{
			get
			{
				return this._ActivityInitiatives;
			}
			set
			{
				this._ActivityInitiatives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_ActivityInitiative1", Storage="_ActivityInitiatives1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<ActivityInitiative> ActivityInitiatives1
		{
			get
			{
				return this._ActivityInitiatives1;
			}
			set
			{
				this._ActivityInitiatives1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUser", Storage="_SystemUsers", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<SystemUser> SystemUsers
		{
			get
			{
				return this._SystemUsers;
			}
			set
			{
				this._SystemUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUser1", Storage="_SystemUsers1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<SystemUser> SystemUsers1
		{
			get
			{
				return this._SystemUsers1;
			}
			set
			{
				this._SystemUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_FavoriteActivity", Storage="_FavoriteActivities", ThisKey="Id", OtherKey="SystemUserId")]
		public EntitySet<FavoriteActivity> FavoriteActivities
		{
			get
			{
				return this._FavoriteActivities;
			}
			set
			{
				this._FavoriteActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Activity", Storage="_Activities", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Activity1", Storage="_Activities1", ThisKey="Id", OtherKey="LastUpdatedBy")]
		public EntitySet<Activity> Activities1
		{
			get
			{
				return this._Activities1;
			}
			set
			{
				this._Activities1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUser", Storage="_SystemUser1", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.SystemUsers.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.SystemUsers.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_SystemUser", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.SystemUsers.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.SystemUsers.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUser1", Storage="_SystemUser2", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser2
		{
			get
			{
				return this._SystemUser2.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser2.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser2.Entity = null;
						previousValue.SystemUsers1.Remove(this);
					}
					this._SystemUser2.Entity = value;
					if ((value != null))
					{
						value.SystemUsers1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivitySharedWiths(ActivitySharedWith entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_ActivitySharedWiths(ActivitySharedWith entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_ActivitySharedWiths1(ActivitySharedWith entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_ActivitySharedWiths1(ActivitySharedWith entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_Logs1(Log entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_Logs1(Log entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_ActivitySectors(ActivitySector entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_ActivitySectors(ActivitySector entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_ActivitySectors1(ActivitySector entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_ActivitySectors1(ActivitySector entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_ActivityNROrigins(ActivityNROrigin entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_ActivityNROrigins(ActivityNROrigin entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_ActivityNROrigins1(ActivityNROrigin entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_ActivityNROrigins1(ActivityNROrigin entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_ActivityCommunicationMaterials(ActivityCommunicationMaterial entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_ActivityCommunicationMaterials(ActivityCommunicationMaterial entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_ActivityCommunicationMaterials1(ActivityCommunicationMaterial entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_ActivityCommunicationMaterials1(ActivityCommunicationMaterial entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_ActivityCategories(ActivityCategory entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_ActivityCategories(ActivityCategory entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_ActivityCategories1(ActivityCategory entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_ActivityCategories1(ActivityCategory entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_ActivityFilters(ActivityFilter entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_ActivityFilters(ActivityFilter entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_ActivityFilters1(ActivityFilter entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_ActivityFilters1(ActivityFilter entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_SystemUserMinistries(SystemUserMinistry entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_SystemUserMinistries(SystemUserMinistry entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_CreatedBySystemUserMinistries(SystemUserMinistry entity)
		{
			this.SendPropertyChanging();
			entity.CreatedBySystemUser = this;
		}
		
		private void detach_CreatedBySystemUserMinistries(SystemUserMinistry entity)
		{
			this.SendPropertyChanging();
			entity.CreatedBySystemUser = null;
		}
		
		private void attach_LastUpdatedBySystemUserMinistries(SystemUserMinistry entity)
		{
			this.SendPropertyChanging();
			entity.LastUpdatedBySystemUser = this;
		}
		
		private void detach_LastUpdatedBySystemUserMinistries(SystemUserMinistry entity)
		{
			this.SendPropertyChanging();
			entity.LastUpdatedBySystemUser = null;
		}
		
		private void attach_NewsFeeds(NewsFeed entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_NewsFeeds(NewsFeed entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_NewsFeeds1(NewsFeed entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_NewsFeeds1(NewsFeed entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_CommunicationContacts(CommunicationContact entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_CommunicationContacts(CommunicationContact entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_Ministries(Ministry entity)
		{
			this.SendPropertyChanging();
			entity.ContactUser = this;
		}
		
		private void detach_Ministries(Ministry entity)
		{
			this.SendPropertyChanging();
			entity.ContactUser = null;
		}
		
		private void attach_Ministries1(Ministry entity)
		{
			this.SendPropertyChanging();
			entity.EodLastRunUser = this;
		}
		
		private void detach_Ministries1(Ministry entity)
		{
			this.SendPropertyChanging();
			entity.EodLastRunUser = null;
		}
		
		private void attach_Ministries2(Ministry entity)
		{
			this.SendPropertyChanging();
			entity.SecondContactUser = this;
		}
		
		private void detach_Ministries2(Ministry entity)
		{
			this.SendPropertyChanging();
			entity.SecondContactUser = null;
		}
		
		private void attach_ActivityInitiatives(ActivityInitiative entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_ActivityInitiatives(ActivityInitiative entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_ActivityInitiatives1(ActivityInitiative entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_ActivityInitiatives1(ActivityInitiative entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_SystemUsers(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
		
		private void attach_SystemUsers1(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser2 = this;
		}
		
		private void detach_SystemUsers1(SystemUser entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser2 = null;
		}
		
		private void attach_FavoriteActivities(FavoriteActivity entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_FavoriteActivities(FavoriteActivity entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser = null;
		}
		
		private void attach_Activities1(Activity entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = this;
		}
		
		private void detach_Activities1(Activity entity)
		{
			this.SendPropertyChanging();
			entity.SystemUser1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.FavoriteActivity")]
	public partial class FavoriteActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SystemUserId;
		
		private int _ActivityId;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemUserIdChanging(int value);
    partial void OnSystemUserIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    #endregion
		
		public FavoriteActivity()
		{
			this._SystemUser = default(EntityRef<SystemUser>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemUserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SystemUserId
		{
			get
			{
				return this._SystemUserId;
			}
			set
			{
				if ((this._SystemUserId != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystemUserIdChanging(value);
					this.SendPropertyChanging();
					this._SystemUserId = value;
					this.SendPropertyChanged("SystemUserId");
					this.OnSystemUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_FavoriteActivity", Storage="_SystemUser", ThisKey="SystemUserId", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.FavoriteActivities.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.FavoriteActivities.Add(this);
						this._SystemUserId = value.Id;
					}
					else
					{
						this._SystemUserId = default(int);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_FavoriteActivity", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.FavoriteActivities.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.FavoriteActivities.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityKeywords")]
	public partial class ActivityKeyword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityId;
		
		private int _KeywordId;
		
		private bool _IsActive;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private int _LastUpdatedBy;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnKeywordIdChanging(int value);
    partial void OnKeywordIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(int value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public ActivityKeyword()
		{
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeywordId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KeywordId
		{
			get
			{
				return this._KeywordId;
			}
			set
			{
				if ((this._KeywordId != value))
				{
					this.OnKeywordIdChanging(value);
					this.SendPropertyChanging();
					this._KeywordId = value;
					this.SendPropertyChanged("KeywordId");
					this.OnKeywordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL")]
		public int LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityKeyword", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityKeywords.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityKeywords.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.Keyword")]
	public partial class Keyword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _SortOrder;
		
		private bool _IsActive;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private int _LastUpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(int value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public Keyword()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int NOT NULL")]
		public int LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _StartDateTime;
		
		private System.Nullable<System.DateTime> _EndDateTime;
		
		private string _PotentialDates;
		
		private string _Title;
		
		private string _Details;
		
		private string _Schedule;
		
		private string _Significance;
		
		private string _Strategy;
		
		private string _Comments;
		
		private string _HqComments;
		
		private string _LeadOrganization;
		
		private string _Venue;
		
		private string _Translations;
		
		private System.Nullable<int> _StatusId;
		
		private System.Nullable<int> _HqStatusId;
		
		private int _HqSection;
		
		private System.Nullable<int> _NRDistributionId;
		
		private System.Nullable<int> _PremierRequestedId;
		
		private System.Nullable<System.Guid> _ContactMinistryId;
		
		private System.Nullable<int> _GovernmentRepresentativeId;
		
		private System.Nullable<int> _CommunicationContactId;
		
		private System.Nullable<int> _EventPlannerId;
		
		private System.Nullable<int> _VideographerId;
		
		private System.Nullable<int> _CityId;
		
		private string _OtherCity;
		
		private bool _IsActive;
		
		private bool _IsConfirmed;
		
		private bool _IsIssue;
		
		private bool _IsAllDay;
		
		private bool _IsAtLegislature;
		
		private bool _IsConfidential;
		
		private bool _IsCrossGovernment;
		
		private bool _IsMilestone;
		
		private bool _IsTitleNeedsReview;
		
		private bool _IsDetailsNeedsReview;
		
		private bool _IsRepresentativeNeedsReview;
		
		private bool _IsCityNeedsReview;
		
		private bool _IsStartDateNeedsReview;
		
		private bool _IsEndDateNeedsReview;
		
		private bool _IsCategoriesNeedsReview;
		
		private bool _IsCommMaterialsNeedsReview;
		
		private bool _IsActiveNeedsReview;
		
		private System.Nullable<System.DateTime> _NRDateTime;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.Guid> _RowGuid;
		
		private bool _IsSignificanceNeedsReview;
		
		private bool _IsStrategyNeedsReview;
		
		private bool _IsSchedulingConsiderationsNeedsReview;
		
		private bool _IsInternalNotesNeedsReview;
		
		private bool _IsLeadOrganizationNeedsReview;
		
		private bool _IsInitiativesNeedsReview;
		
		private bool _IsTagsNeedsReview;
		
		private bool _IsOriginNeedsReview;
		
		private bool _IsDistributionNeedsReview;
		
		private bool _IsTranslationsRequiredNeedsReview;
		
		private bool _IsPremierRequestedNeedsReview;
		
		private bool _IsVenueNeedsReview;
		
		private bool _IsEventPlannerNeedsReview;
		
		private bool _IsDigitalNeedsReview;
		
		private EntitySet<ActivitySharedWith> _ActivitySharedWiths;
		
		private EntitySet<Log> _Logs;
		
		private EntitySet<ActivitySector> _ActivitySectors;
		
		private EntitySet<ActivityNROrigin> _ActivityNROrigins;
		
		private EntitySet<ActivityCommunicationMaterial> _ActivityCommunicationMaterials;
		
		private EntitySet<ActivityCategory> _ActivityCategories;
		
		private EntitySet<NewsFeed> _NewsFeeds;
		
		private EntitySet<ActivityTheme> _ActivityThemes;
		
		private EntitySet<ActivityTag> _ActivityTags;
		
		private EntitySet<ActivityInitiative> _ActivityInitiatives;
		
		private EntitySet<FavoriteActivity> _FavoriteActivities;
		
		private EntitySet<ActivityKeyword> _ActivityKeywords;
		
		private EntitySet<ActivityFile> _ActivityFiles;
		
		private EntityRef<City> _City;
		
		private EntityRef<CommunicationContact> _CommunicationContact;
		
		private EntityRef<EventPlanner> _EventPlanner;
		
		private EntityRef<GovernmentRepresentative> _GovernmentRepresentative;
		
		private EntityRef<Status> _Status;
		
		private EntityRef<Ministry> _Ministry;
		
		private EntityRef<NRDistribution> _NRDistribution;
		
		private EntityRef<PremierRequested> _PremierRequested;
		
		private EntityRef<Status> _Status1;
		
		private EntityRef<SystemUser> _SystemUser;
		
		private EntityRef<SystemUser> _SystemUser1;
		
		private EntityRef<Videographer> _Videographer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStartDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateTimeChanged();
    partial void OnPotentialDatesChanging(string value);
    partial void OnPotentialDatesChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnScheduleChanging(string value);
    partial void OnScheduleChanged();
    partial void OnSignificanceChanging(string value);
    partial void OnSignificanceChanged();
    partial void OnStrategyChanging(string value);
    partial void OnStrategyChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnHqCommentsChanging(string value);
    partial void OnHqCommentsChanged();
    partial void OnLeadOrganizationChanging(string value);
    partial void OnLeadOrganizationChanged();
    partial void OnVenueChanging(string value);
    partial void OnVenueChanged();
    partial void OnTranslationsChanging(string value);
    partial void OnTranslationsChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnHqStatusIdChanging(System.Nullable<int> value);
    partial void OnHqStatusIdChanged();
    partial void OnHqSectionChanging(int value);
    partial void OnHqSectionChanged();
    partial void OnNRDistributionIdChanging(System.Nullable<int> value);
    partial void OnNRDistributionIdChanged();
    partial void OnPremierRequestedIdChanging(System.Nullable<int> value);
    partial void OnPremierRequestedIdChanged();
    partial void OnContactMinistryIdChanging(System.Nullable<System.Guid> value);
    partial void OnContactMinistryIdChanged();
    partial void OnGovernmentRepresentativeIdChanging(System.Nullable<int> value);
    partial void OnGovernmentRepresentativeIdChanged();
    partial void OnCommunicationContactIdChanging(System.Nullable<int> value);
    partial void OnCommunicationContactIdChanged();
    partial void OnEventPlannerIdChanging(System.Nullable<int> value);
    partial void OnEventPlannerIdChanged();
    partial void OnVideographerIdChanging(System.Nullable<int> value);
    partial void OnVideographerIdChanged();
    partial void OnCityIdChanging(System.Nullable<int> value);
    partial void OnCityIdChanged();
    partial void OnOtherCityChanging(string value);
    partial void OnOtherCityChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsConfirmedChanging(bool value);
    partial void OnIsConfirmedChanged();
    partial void OnIsIssueChanging(bool value);
    partial void OnIsIssueChanged();
    partial void OnIsAllDayChanging(bool value);
    partial void OnIsAllDayChanged();
    partial void OnIsAtLegislatureChanging(bool value);
    partial void OnIsAtLegislatureChanged();
    partial void OnIsConfidentialChanging(bool value);
    partial void OnIsConfidentialChanged();
    partial void OnIsCrossGovernmentChanging(bool value);
    partial void OnIsCrossGovernmentChanged();
    partial void OnIsMilestoneChanging(bool value);
    partial void OnIsMilestoneChanged();
    partial void OnIsTitleNeedsReviewChanging(bool value);
    partial void OnIsTitleNeedsReviewChanged();
    partial void OnIsDetailsNeedsReviewChanging(bool value);
    partial void OnIsDetailsNeedsReviewChanged();
    partial void OnIsRepresentativeNeedsReviewChanging(bool value);
    partial void OnIsRepresentativeNeedsReviewChanged();
    partial void OnIsCityNeedsReviewChanging(bool value);
    partial void OnIsCityNeedsReviewChanged();
    partial void OnIsStartDateNeedsReviewChanging(bool value);
    partial void OnIsStartDateNeedsReviewChanged();
    partial void OnIsEndDateNeedsReviewChanging(bool value);
    partial void OnIsEndDateNeedsReviewChanged();
    partial void OnIsCategoriesNeedsReviewChanging(bool value);
    partial void OnIsCategoriesNeedsReviewChanged();
    partial void OnIsCommMaterialsNeedsReviewChanging(bool value);
    partial void OnIsCommMaterialsNeedsReviewChanged();
    partial void OnIsActiveNeedsReviewChanging(bool value);
    partial void OnIsActiveNeedsReviewChanged();
    partial void OnNRDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnNRDateTimeChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRowGuidChanging(System.Nullable<System.Guid> value);
    partial void OnRowGuidChanged();
    partial void OnIsSignificanceNeedsReviewChanging(bool value);
    partial void OnIsSignificanceNeedsReviewChanged();
    partial void OnIsStrategyNeedsReviewChanging(bool value);
    partial void OnIsStrategyNeedsReviewChanged();
    partial void OnIsSchedulingConsiderationsNeedsReviewChanging(bool value);
    partial void OnIsSchedulingConsiderationsNeedsReviewChanged();
    partial void OnIsInternalNotesNeedsReviewChanging(bool value);
    partial void OnIsInternalNotesNeedsReviewChanged();
    partial void OnIsLeadOrganizationNeedsReviewChanging(bool value);
    partial void OnIsLeadOrganizationNeedsReviewChanged();
    partial void OnIsInitiativesNeedsReviewChanging(bool value);
    partial void OnIsInitiativesNeedsReviewChanged();
    partial void OnIsTagsNeedsReviewChanging(bool value);
    partial void OnIsTagsNeedsReviewChanged();
    partial void OnIsOriginNeedsReviewChanging(bool value);
    partial void OnIsOriginNeedsReviewChanged();
    partial void OnIsDistributionNeedsReviewChanging(bool value);
    partial void OnIsDistributionNeedsReviewChanged();
    partial void OnIsTranslationsRequiredNeedsReviewChanging(bool value);
    partial void OnIsTranslationsRequiredNeedsReviewChanged();
    partial void OnIsPremierRequestedNeedsReviewChanging(bool value);
    partial void OnIsPremierRequestedNeedsReviewChanged();
    partial void OnIsVenueNeedsReviewChanging(bool value);
    partial void OnIsVenueNeedsReviewChanged();
    partial void OnIsEventPlannerNeedsReviewChanging(bool value);
    partial void OnIsEventPlannerNeedsReviewChanged();
    partial void OnIsDigitalNeedsReviewChanging(bool value);
    partial void OnIsDigitalNeedsReviewChanged();
    #endregion
		
		public Activity()
		{
			this._ActivitySharedWiths = new EntitySet<ActivitySharedWith>(new Action<ActivitySharedWith>(this.attach_ActivitySharedWiths), new Action<ActivitySharedWith>(this.detach_ActivitySharedWiths));
			this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
			this._ActivitySectors = new EntitySet<ActivitySector>(new Action<ActivitySector>(this.attach_ActivitySectors), new Action<ActivitySector>(this.detach_ActivitySectors));
			this._ActivityNROrigins = new EntitySet<ActivityNROrigin>(new Action<ActivityNROrigin>(this.attach_ActivityNROrigins), new Action<ActivityNROrigin>(this.detach_ActivityNROrigins));
			this._ActivityCommunicationMaterials = new EntitySet<ActivityCommunicationMaterial>(new Action<ActivityCommunicationMaterial>(this.attach_ActivityCommunicationMaterials), new Action<ActivityCommunicationMaterial>(this.detach_ActivityCommunicationMaterials));
			this._ActivityCategories = new EntitySet<ActivityCategory>(new Action<ActivityCategory>(this.attach_ActivityCategories), new Action<ActivityCategory>(this.detach_ActivityCategories));
			this._NewsFeeds = new EntitySet<NewsFeed>(new Action<NewsFeed>(this.attach_NewsFeeds), new Action<NewsFeed>(this.detach_NewsFeeds));
			this._ActivityThemes = new EntitySet<ActivityTheme>(new Action<ActivityTheme>(this.attach_ActivityThemes), new Action<ActivityTheme>(this.detach_ActivityThemes));
			this._ActivityTags = new EntitySet<ActivityTag>(new Action<ActivityTag>(this.attach_ActivityTags), new Action<ActivityTag>(this.detach_ActivityTags));
			this._ActivityInitiatives = new EntitySet<ActivityInitiative>(new Action<ActivityInitiative>(this.attach_ActivityInitiatives), new Action<ActivityInitiative>(this.detach_ActivityInitiatives));
			this._FavoriteActivities = new EntitySet<FavoriteActivity>(new Action<FavoriteActivity>(this.attach_FavoriteActivities), new Action<FavoriteActivity>(this.detach_FavoriteActivities));
			this._ActivityKeywords = new EntitySet<ActivityKeyword>(new Action<ActivityKeyword>(this.attach_ActivityKeywords), new Action<ActivityKeyword>(this.detach_ActivityKeywords));
			this._ActivityFiles = new EntitySet<ActivityFile>(new Action<ActivityFile>(this.attach_ActivityFiles), new Action<ActivityFile>(this.detach_ActivityFiles));
			this._City = default(EntityRef<City>);
			this._CommunicationContact = default(EntityRef<CommunicationContact>);
			this._EventPlanner = default(EntityRef<EventPlanner>);
			this._GovernmentRepresentative = default(EntityRef<GovernmentRepresentative>);
			this._Status = default(EntityRef<Status>);
			this._Ministry = default(EntityRef<Ministry>);
			this._NRDistribution = default(EntityRef<NRDistribution>);
			this._PremierRequested = default(EntityRef<PremierRequested>);
			this._Status1 = default(EntityRef<Status>);
			this._SystemUser = default(EntityRef<SystemUser>);
			this._SystemUser1 = default(EntityRef<SystemUser>);
			this._Videographer = default(EntityRef<Videographer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialDates", DbType="NVarChar(70)", UpdateCheck=UpdateCheck.Never)]
		public string PotentialDates
		{
			get
			{
				return this._PotentialDates;
			}
			set
			{
				if ((this._PotentialDates != value))
				{
					this.OnPotentialDatesChanging(value);
					this.SendPropertyChanging();
					this._PotentialDates = value;
					this.SendPropertyChanged("PotentialDates");
					this.OnPotentialDatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Significance", DbType="NVarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Significance
		{
			get
			{
				return this._Significance;
			}
			set
			{
				if ((this._Significance != value))
				{
					this.OnSignificanceChanging(value);
					this.SendPropertyChanging();
					this._Significance = value;
					this.SendPropertyChanged("Significance");
					this.OnSignificanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strategy", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Strategy
		{
			get
			{
				return this._Strategy;
			}
			set
			{
				if ((this._Strategy != value))
				{
					this.OnStrategyChanging(value);
					this.SendPropertyChanging();
					this._Strategy = value;
					this.SendPropertyChanged("Strategy");
					this.OnStrategyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(4000)", UpdateCheck=UpdateCheck.Never)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HqComments", DbType="NVarChar(2000)", UpdateCheck=UpdateCheck.Never)]
		public string HqComments
		{
			get
			{
				return this._HqComments;
			}
			set
			{
				if ((this._HqComments != value))
				{
					this.OnHqCommentsChanging(value);
					this.SendPropertyChanging();
					this._HqComments = value;
					this.SendPropertyChanged("HqComments");
					this.OnHqCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadOrganization", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string LeadOrganization
		{
			get
			{
				return this._LeadOrganization;
			}
			set
			{
				if ((this._LeadOrganization != value))
				{
					this.OnLeadOrganizationChanging(value);
					this.SendPropertyChanging();
					this._LeadOrganization = value;
					this.SendPropertyChanged("LeadOrganization");
					this.OnLeadOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venue", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Venue
		{
			get
			{
				return this._Venue;
			}
			set
			{
				if ((this._Venue != value))
				{
					this.OnVenueChanging(value);
					this.SendPropertyChanging();
					this._Venue = value;
					this.SendPropertyChanged("Venue");
					this.OnVenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Translations", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Translations
		{
			get
			{
				return this._Translations;
			}
			set
			{
				if ((this._Translations != value))
				{
					this.OnTranslationsChanging(value);
					this.SendPropertyChanging();
					this._Translations = value;
					this.SendPropertyChanged("Translations");
					this.OnTranslationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HqStatusId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> HqStatusId
		{
			get
			{
				return this._HqStatusId;
			}
			set
			{
				if ((this._HqStatusId != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHqStatusIdChanging(value);
					this.SendPropertyChanging();
					this._HqStatusId = value;
					this.SendPropertyChanged("HqStatusId");
					this.OnHqStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HqSection", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int HqSection
		{
			get
			{
				return this._HqSection;
			}
			set
			{
				if ((this._HqSection != value))
				{
					this.OnHqSectionChanging(value);
					this.SendPropertyChanging();
					this._HqSection = value;
					this.SendPropertyChanged("HqSection");
					this.OnHqSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRDistributionId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NRDistributionId
		{
			get
			{
				return this._NRDistributionId;
			}
			set
			{
				if ((this._NRDistributionId != value))
				{
					if (this._NRDistribution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNRDistributionIdChanging(value);
					this.SendPropertyChanging();
					this._NRDistributionId = value;
					this.SendPropertyChanged("NRDistributionId");
					this.OnNRDistributionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PremierRequestedId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PremierRequestedId
		{
			get
			{
				return this._PremierRequestedId;
			}
			set
			{
				if ((this._PremierRequestedId != value))
				{
					if (this._PremierRequested.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPremierRequestedIdChanging(value);
					this.SendPropertyChanging();
					this._PremierRequestedId = value;
					this.SendPropertyChanged("PremierRequestedId");
					this.OnPremierRequestedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMinistryId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ContactMinistryId
		{
			get
			{
				return this._ContactMinistryId;
			}
			set
			{
				if ((this._ContactMinistryId != value))
				{
					if (this._Ministry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactMinistryIdChanging(value);
					this.SendPropertyChanging();
					this._ContactMinistryId = value;
					this.SendPropertyChanged("ContactMinistryId");
					this.OnContactMinistryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentRepresentativeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> GovernmentRepresentativeId
		{
			get
			{
				return this._GovernmentRepresentativeId;
			}
			set
			{
				if ((this._GovernmentRepresentativeId != value))
				{
					if (this._GovernmentRepresentative.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGovernmentRepresentativeIdChanging(value);
					this.SendPropertyChanging();
					this._GovernmentRepresentativeId = value;
					this.SendPropertyChanged("GovernmentRepresentativeId");
					this.OnGovernmentRepresentativeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunicationContactId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CommunicationContactId
		{
			get
			{
				return this._CommunicationContactId;
			}
			set
			{
				if ((this._CommunicationContactId != value))
				{
					if (this._CommunicationContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommunicationContactIdChanging(value);
					this.SendPropertyChanging();
					this._CommunicationContactId = value;
					this.SendPropertyChanged("CommunicationContactId");
					this.OnCommunicationContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventPlannerId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> EventPlannerId
		{
			get
			{
				return this._EventPlannerId;
			}
			set
			{
				if ((this._EventPlannerId != value))
				{
					if (this._EventPlanner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventPlannerIdChanging(value);
					this.SendPropertyChanging();
					this._EventPlannerId = value;
					this.SendPropertyChanged("EventPlannerId");
					this.OnEventPlannerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideographerId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> VideographerId
		{
			get
			{
				return this._VideographerId;
			}
			set
			{
				if ((this._VideographerId != value))
				{
					if (this._Videographer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideographerIdChanging(value);
					this.SendPropertyChanging();
					this._VideographerId = value;
					this.SendPropertyChanged("VideographerId");
					this.OnVideographerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCity", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string OtherCity
		{
			get
			{
				return this._OtherCity;
			}
			set
			{
				if ((this._OtherCity != value))
				{
					this.OnOtherCityChanging(value);
					this.SendPropertyChanging();
					this._OtherCity = value;
					this.SendPropertyChanged("OtherCity");
					this.OnOtherCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIssue", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsIssue
		{
			get
			{
				return this._IsIssue;
			}
			set
			{
				if ((this._IsIssue != value))
				{
					this.OnIsIssueChanging(value);
					this.SendPropertyChanging();
					this._IsIssue = value;
					this.SendPropertyChanged("IsIssue");
					this.OnIsIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllDay", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsAllDay
		{
			get
			{
				return this._IsAllDay;
			}
			set
			{
				if ((this._IsAllDay != value))
				{
					this.OnIsAllDayChanging(value);
					this.SendPropertyChanging();
					this._IsAllDay = value;
					this.SendPropertyChanged("IsAllDay");
					this.OnIsAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAtLegislature", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsAtLegislature
		{
			get
			{
				return this._IsAtLegislature;
			}
			set
			{
				if ((this._IsAtLegislature != value))
				{
					this.OnIsAtLegislatureChanging(value);
					this.SendPropertyChanging();
					this._IsAtLegislature = value;
					this.SendPropertyChanged("IsAtLegislature");
					this.OnIsAtLegislatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfidential", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsConfidential
		{
			get
			{
				return this._IsConfidential;
			}
			set
			{
				if ((this._IsConfidential != value))
				{
					this.OnIsConfidentialChanging(value);
					this.SendPropertyChanging();
					this._IsConfidential = value;
					this.SendPropertyChanged("IsConfidential");
					this.OnIsConfidentialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCrossGovernment", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCrossGovernment
		{
			get
			{
				return this._IsCrossGovernment;
			}
			set
			{
				if ((this._IsCrossGovernment != value))
				{
					this.OnIsCrossGovernmentChanging(value);
					this.SendPropertyChanging();
					this._IsCrossGovernment = value;
					this.SendPropertyChanged("IsCrossGovernment");
					this.OnIsCrossGovernmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMilestone", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsMilestone
		{
			get
			{
				return this._IsMilestone;
			}
			set
			{
				if ((this._IsMilestone != value))
				{
					this.OnIsMilestoneChanging(value);
					this.SendPropertyChanging();
					this._IsMilestone = value;
					this.SendPropertyChanged("IsMilestone");
					this.OnIsMilestoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTitleNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsTitleNeedsReview
		{
			get
			{
				return this._IsTitleNeedsReview;
			}
			set
			{
				if ((this._IsTitleNeedsReview != value))
				{
					this.OnIsTitleNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsTitleNeedsReview = value;
					this.SendPropertyChanged("IsTitleNeedsReview");
					this.OnIsTitleNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDetailsNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsDetailsNeedsReview
		{
			get
			{
				return this._IsDetailsNeedsReview;
			}
			set
			{
				if ((this._IsDetailsNeedsReview != value))
				{
					this.OnIsDetailsNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsDetailsNeedsReview = value;
					this.SendPropertyChanged("IsDetailsNeedsReview");
					this.OnIsDetailsNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRepresentativeNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsRepresentativeNeedsReview
		{
			get
			{
				return this._IsRepresentativeNeedsReview;
			}
			set
			{
				if ((this._IsRepresentativeNeedsReview != value))
				{
					this.OnIsRepresentativeNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsRepresentativeNeedsReview = value;
					this.SendPropertyChanged("IsRepresentativeNeedsReview");
					this.OnIsRepresentativeNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCityNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCityNeedsReview
		{
			get
			{
				return this._IsCityNeedsReview;
			}
			set
			{
				if ((this._IsCityNeedsReview != value))
				{
					this.OnIsCityNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsCityNeedsReview = value;
					this.SendPropertyChanged("IsCityNeedsReview");
					this.OnIsCityNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStartDateNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsStartDateNeedsReview
		{
			get
			{
				return this._IsStartDateNeedsReview;
			}
			set
			{
				if ((this._IsStartDateNeedsReview != value))
				{
					this.OnIsStartDateNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsStartDateNeedsReview = value;
					this.SendPropertyChanged("IsStartDateNeedsReview");
					this.OnIsStartDateNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndDateNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsEndDateNeedsReview
		{
			get
			{
				return this._IsEndDateNeedsReview;
			}
			set
			{
				if ((this._IsEndDateNeedsReview != value))
				{
					this.OnIsEndDateNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsEndDateNeedsReview = value;
					this.SendPropertyChanged("IsEndDateNeedsReview");
					this.OnIsEndDateNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCategoriesNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCategoriesNeedsReview
		{
			get
			{
				return this._IsCategoriesNeedsReview;
			}
			set
			{
				if ((this._IsCategoriesNeedsReview != value))
				{
					this.OnIsCategoriesNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsCategoriesNeedsReview = value;
					this.SendPropertyChanged("IsCategoriesNeedsReview");
					this.OnIsCategoriesNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCommMaterialsNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCommMaterialsNeedsReview
		{
			get
			{
				return this._IsCommMaterialsNeedsReview;
			}
			set
			{
				if ((this._IsCommMaterialsNeedsReview != value))
				{
					this.OnIsCommMaterialsNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsCommMaterialsNeedsReview = value;
					this.SendPropertyChanged("IsCommMaterialsNeedsReview");
					this.OnIsCommMaterialsNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActiveNeedsReview
		{
			get
			{
				return this._IsActiveNeedsReview;
			}
			set
			{
				if ((this._IsActiveNeedsReview != value))
				{
					this.OnIsActiveNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsActiveNeedsReview = value;
					this.SendPropertyChanged("IsActiveNeedsReview");
					this.OnIsActiveNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> NRDateTime
		{
			get
			{
				return this._NRDateTime;
			}
			set
			{
				if ((this._NRDateTime != value))
				{
					this.OnNRDateTimeChanging(value);
					this.SendPropertyChanging();
					this._NRDateTime = value;
					this.SendPropertyChanged("NRDateTime");
					this.OnNRDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._SystemUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					if (this._SystemUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGuid", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RowGuid
		{
			get
			{
				return this._RowGuid;
			}
			set
			{
				if ((this._RowGuid != value))
				{
					this.OnRowGuidChanging(value);
					this.SendPropertyChanging();
					this._RowGuid = value;
					this.SendPropertyChanged("RowGuid");
					this.OnRowGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSignificanceNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsSignificanceNeedsReview
		{
			get
			{
				return this._IsSignificanceNeedsReview;
			}
			set
			{
				if ((this._IsSignificanceNeedsReview != value))
				{
					this.OnIsSignificanceNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsSignificanceNeedsReview = value;
					this.SendPropertyChanged("IsSignificanceNeedsReview");
					this.OnIsSignificanceNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStrategyNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsStrategyNeedsReview
		{
			get
			{
				return this._IsStrategyNeedsReview;
			}
			set
			{
				if ((this._IsStrategyNeedsReview != value))
				{
					this.OnIsStrategyNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsStrategyNeedsReview = value;
					this.SendPropertyChanged("IsStrategyNeedsReview");
					this.OnIsStrategyNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSchedulingConsiderationsNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsSchedulingConsiderationsNeedsReview
		{
			get
			{
				return this._IsSchedulingConsiderationsNeedsReview;
			}
			set
			{
				if ((this._IsSchedulingConsiderationsNeedsReview != value))
				{
					this.OnIsSchedulingConsiderationsNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsSchedulingConsiderationsNeedsReview = value;
					this.SendPropertyChanged("IsSchedulingConsiderationsNeedsReview");
					this.OnIsSchedulingConsiderationsNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInternalNotesNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsInternalNotesNeedsReview
		{
			get
			{
				return this._IsInternalNotesNeedsReview;
			}
			set
			{
				if ((this._IsInternalNotesNeedsReview != value))
				{
					this.OnIsInternalNotesNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsInternalNotesNeedsReview = value;
					this.SendPropertyChanged("IsInternalNotesNeedsReview");
					this.OnIsInternalNotesNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeadOrganizationNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsLeadOrganizationNeedsReview
		{
			get
			{
				return this._IsLeadOrganizationNeedsReview;
			}
			set
			{
				if ((this._IsLeadOrganizationNeedsReview != value))
				{
					this.OnIsLeadOrganizationNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsLeadOrganizationNeedsReview = value;
					this.SendPropertyChanged("IsLeadOrganizationNeedsReview");
					this.OnIsLeadOrganizationNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInitiativesNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsInitiativesNeedsReview
		{
			get
			{
				return this._IsInitiativesNeedsReview;
			}
			set
			{
				if ((this._IsInitiativesNeedsReview != value))
				{
					this.OnIsInitiativesNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsInitiativesNeedsReview = value;
					this.SendPropertyChanged("IsInitiativesNeedsReview");
					this.OnIsInitiativesNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTagsNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsTagsNeedsReview
		{
			get
			{
				return this._IsTagsNeedsReview;
			}
			set
			{
				if ((this._IsTagsNeedsReview != value))
				{
					this.OnIsTagsNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsTagsNeedsReview = value;
					this.SendPropertyChanged("IsTagsNeedsReview");
					this.OnIsTagsNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOriginNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsOriginNeedsReview
		{
			get
			{
				return this._IsOriginNeedsReview;
			}
			set
			{
				if ((this._IsOriginNeedsReview != value))
				{
					this.OnIsOriginNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsOriginNeedsReview = value;
					this.SendPropertyChanged("IsOriginNeedsReview");
					this.OnIsOriginNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDistributionNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsDistributionNeedsReview
		{
			get
			{
				return this._IsDistributionNeedsReview;
			}
			set
			{
				if ((this._IsDistributionNeedsReview != value))
				{
					this.OnIsDistributionNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsDistributionNeedsReview = value;
					this.SendPropertyChanged("IsDistributionNeedsReview");
					this.OnIsDistributionNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTranslationsRequiredNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsTranslationsRequiredNeedsReview
		{
			get
			{
				return this._IsTranslationsRequiredNeedsReview;
			}
			set
			{
				if ((this._IsTranslationsRequiredNeedsReview != value))
				{
					this.OnIsTranslationsRequiredNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsTranslationsRequiredNeedsReview = value;
					this.SendPropertyChanged("IsTranslationsRequiredNeedsReview");
					this.OnIsTranslationsRequiredNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPremierRequestedNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsPremierRequestedNeedsReview
		{
			get
			{
				return this._IsPremierRequestedNeedsReview;
			}
			set
			{
				if ((this._IsPremierRequestedNeedsReview != value))
				{
					this.OnIsPremierRequestedNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsPremierRequestedNeedsReview = value;
					this.SendPropertyChanged("IsPremierRequestedNeedsReview");
					this.OnIsPremierRequestedNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVenueNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsVenueNeedsReview
		{
			get
			{
				return this._IsVenueNeedsReview;
			}
			set
			{
				if ((this._IsVenueNeedsReview != value))
				{
					this.OnIsVenueNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsVenueNeedsReview = value;
					this.SendPropertyChanged("IsVenueNeedsReview");
					this.OnIsVenueNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEventPlannerNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsEventPlannerNeedsReview
		{
			get
			{
				return this._IsEventPlannerNeedsReview;
			}
			set
			{
				if ((this._IsEventPlannerNeedsReview != value))
				{
					this.OnIsEventPlannerNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsEventPlannerNeedsReview = value;
					this.SendPropertyChanged("IsEventPlannerNeedsReview");
					this.OnIsEventPlannerNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDigitalNeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsDigitalNeedsReview
		{
			get
			{
				return this._IsDigitalNeedsReview;
			}
			set
			{
				if ((this._IsDigitalNeedsReview != value))
				{
					this.OnIsDigitalNeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._IsDigitalNeedsReview = value;
					this.SendPropertyChanged("IsDigitalNeedsReview");
					this.OnIsDigitalNeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivitySharedWith", Storage="_ActivitySharedWiths", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivitySharedWith> ActivitySharedWiths
		{
			get
			{
				return this._ActivitySharedWiths;
			}
			set
			{
				this._ActivitySharedWiths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Log", Storage="_Logs", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<Log> Logs
		{
			get
			{
				return this._Logs;
			}
			set
			{
				this._Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivitySector", Storage="_ActivitySectors", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivitySector> ActivitySectors
		{
			get
			{
				return this._ActivitySectors;
			}
			set
			{
				this._ActivitySectors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityNROrigin", Storage="_ActivityNROrigins", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivityNROrigin> ActivityNROrigins
		{
			get
			{
				return this._ActivityNROrigins;
			}
			set
			{
				this._ActivityNROrigins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityCommunicationMaterial", Storage="_ActivityCommunicationMaterials", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivityCommunicationMaterial> ActivityCommunicationMaterials
		{
			get
			{
				return this._ActivityCommunicationMaterials;
			}
			set
			{
				this._ActivityCommunicationMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityCategory", Storage="_ActivityCategories", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivityCategory> ActivityCategories
		{
			get
			{
				return this._ActivityCategories;
			}
			set
			{
				this._ActivityCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_NewsFeed", Storage="_NewsFeeds", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<NewsFeed> NewsFeeds
		{
			get
			{
				return this._NewsFeeds;
			}
			set
			{
				this._NewsFeeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityTheme", Storage="_ActivityThemes", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivityTheme> ActivityThemes
		{
			get
			{
				return this._ActivityThemes;
			}
			set
			{
				this._ActivityThemes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityTag", Storage="_ActivityTags", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivityTag> ActivityTags
		{
			get
			{
				return this._ActivityTags;
			}
			set
			{
				this._ActivityTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityInitiative", Storage="_ActivityInitiatives", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivityInitiative> ActivityInitiatives
		{
			get
			{
				return this._ActivityInitiatives;
			}
			set
			{
				this._ActivityInitiatives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_FavoriteActivity", Storage="_FavoriteActivities", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<FavoriteActivity> FavoriteActivities
		{
			get
			{
				return this._FavoriteActivities;
			}
			set
			{
				this._FavoriteActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityKeyword", Storage="_ActivityKeywords", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivityKeyword> ActivityKeywords
		{
			get
			{
				return this._ActivityKeywords;
			}
			set
			{
				this._ActivityKeywords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityFile", Storage="_ActivityFiles", ThisKey="Id", OtherKey="ActivityId")]
		public EntitySet<ActivityFile> ActivityFiles
		{
			get
			{
				return this._ActivityFiles;
			}
			set
			{
				this._ActivityFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Activity", Storage="_City", ThisKey="CityId", OtherKey="Id", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._CityId = value.Id;
					}
					else
					{
						this._CityId = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommunicationContact_Activity", Storage="_CommunicationContact", ThisKey="CommunicationContactId", OtherKey="Id", IsForeignKey=true)]
		public CommunicationContact CommunicationContact
		{
			get
			{
				return this._CommunicationContact.Entity;
			}
			set
			{
				CommunicationContact previousValue = this._CommunicationContact.Entity;
				if (((previousValue != value) 
							|| (this._CommunicationContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunicationContact.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._CommunicationContact.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._CommunicationContactId = value.Id;
					}
					else
					{
						this._CommunicationContactId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CommunicationContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EventPlanner_Activity", Storage="_EventPlanner", ThisKey="EventPlannerId", OtherKey="Id", IsForeignKey=true)]
		public EventPlanner EventPlanner
		{
			get
			{
				return this._EventPlanner.Entity;
			}
			set
			{
				EventPlanner previousValue = this._EventPlanner.Entity;
				if (((previousValue != value) 
							|| (this._EventPlanner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EventPlanner.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._EventPlanner.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._EventPlannerId = value.Id;
					}
					else
					{
						this._EventPlannerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EventPlanner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GovernmentRepresentative_Activity", Storage="_GovernmentRepresentative", ThisKey="GovernmentRepresentativeId", OtherKey="Id", IsForeignKey=true)]
		public GovernmentRepresentative GovernmentRepresentative
		{
			get
			{
				return this._GovernmentRepresentative.Entity;
			}
			set
			{
				GovernmentRepresentative previousValue = this._GovernmentRepresentative.Entity;
				if (((previousValue != value) 
							|| (this._GovernmentRepresentative.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GovernmentRepresentative.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._GovernmentRepresentative.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._GovernmentRepresentativeId = value.Id;
					}
					else
					{
						this._GovernmentRepresentativeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("GovernmentRepresentative");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Activity", Storage="_Status", ThisKey="HqStatusId", OtherKey="Id", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._HqStatusId = value.Id;
					}
					else
					{
						this._HqStatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_Activity", Storage="_Ministry", ThisKey="ContactMinistryId", OtherKey="Id", IsForeignKey=true)]
		public Ministry Ministry
		{
			get
			{
				return this._Ministry.Entity;
			}
			set
			{
				Ministry previousValue = this._Ministry.Entity;
				if (((previousValue != value) 
							|| (this._Ministry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ministry.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Ministry.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._ContactMinistryId = value.Id;
					}
					else
					{
						this._ContactMinistryId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Ministry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NRDistribution_Activity", Storage="_NRDistribution", ThisKey="NRDistributionId", OtherKey="Id", IsForeignKey=true)]
		public NRDistribution NRDistribution
		{
			get
			{
				return this._NRDistribution.Entity;
			}
			set
			{
				NRDistribution previousValue = this._NRDistribution.Entity;
				if (((previousValue != value) 
							|| (this._NRDistribution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NRDistribution.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._NRDistribution.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._NRDistributionId = value.Id;
					}
					else
					{
						this._NRDistributionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("NRDistribution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PremierRequested_Activity", Storage="_PremierRequested", ThisKey="PremierRequestedId", OtherKey="Id", IsForeignKey=true)]
		public PremierRequested PremierRequested
		{
			get
			{
				return this._PremierRequested.Entity;
			}
			set
			{
				PremierRequested previousValue = this._PremierRequested.Entity;
				if (((previousValue != value) 
							|| (this._PremierRequested.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PremierRequested.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._PremierRequested.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._PremierRequestedId = value.Id;
					}
					else
					{
						this._PremierRequestedId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PremierRequested");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Activity1", Storage="_Status1", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public Status Status1
		{
			get
			{
				return this._Status1.Entity;
			}
			set
			{
				Status previousValue = this._Status1.Entity;
				if (((previousValue != value) 
							|| (this._Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status1.Entity = null;
						previousValue.Activities1.Remove(this);
					}
					this._Status1.Entity = value;
					if ((value != null))
					{
						value.Activities1.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Activity", Storage="_SystemUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser
		{
			get
			{
				return this._SystemUser.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._SystemUser.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_Activity1", Storage="_SystemUser1", ThisKey="LastUpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public SystemUser SystemUser1
		{
			get
			{
				return this._SystemUser1.Entity;
			}
			set
			{
				SystemUser previousValue = this._SystemUser1.Entity;
				if (((previousValue != value) 
							|| (this._SystemUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SystemUser1.Entity = null;
						previousValue.Activities1.Remove(this);
					}
					this._SystemUser1.Entity = value;
					if ((value != null))
					{
						value.Activities1.Add(this);
						this._LastUpdatedBy = value.Id;
					}
					else
					{
						this._LastUpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("SystemUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Videographer_Activity", Storage="_Videographer", ThisKey="VideographerId", OtherKey="Id", IsForeignKey=true)]
		public Videographer Videographer
		{
			get
			{
				return this._Videographer.Entity;
			}
			set
			{
				Videographer previousValue = this._Videographer.Entity;
				if (((previousValue != value) 
							|| (this._Videographer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Videographer.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Videographer.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._VideographerId = value.Id;
					}
					else
					{
						this._VideographerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Videographer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivitySharedWiths(ActivitySharedWith entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivitySharedWiths(ActivitySharedWith entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivitySectors(ActivitySector entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivitySectors(ActivitySector entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityNROrigins(ActivityNROrigin entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityNROrigins(ActivityNROrigin entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityCommunicationMaterials(ActivityCommunicationMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityCommunicationMaterials(ActivityCommunicationMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityCategories(ActivityCategory entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityCategories(ActivityCategory entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_NewsFeeds(NewsFeed entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_NewsFeeds(NewsFeed entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityThemes(ActivityTheme entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityThemes(ActivityTheme entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityTags(ActivityTag entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityTags(ActivityTag entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityInitiatives(ActivityInitiative entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityInitiatives(ActivityInitiative entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_FavoriteActivities(FavoriteActivity entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_FavoriteActivities(FavoriteActivity entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityKeywords(ActivityKeyword entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityKeywords(ActivityKeyword entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityFiles(ActivityFile entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityFiles(ActivityFile entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActiveActivities")]
	public partial class ActiveActivity
	{
		
		private int _Id;
		
		private System.Nullable<int> _StatusId;
		
		private System.Nullable<int> _HqStatusId;
		
		private System.Nullable<System.DateTime> _StartDateTime;
		
		private System.Nullable<System.DateTime> _EndDateTime;
		
		private bool _IsConfirmed;
		
		private string _PotentialDates;
		
		private string _Title;
		
		private string _Details;
		
		private string _Comments;
		
		private string _HqComments;
		
		private int _HqSection;
		
		private System.Nullable<int> _PremierRequestedId;
		
		private System.Nullable<System.Guid> _ContactMinistryId;
		
		private string _Ministry;
		
		private string _LeadOrganization;
		
		private System.Nullable<int> _CityId;
		
		private string _Venue;
		
		private System.Nullable<int> _GovernmentRepresentativeId;
		
		private bool _IsAllDay;
		
		private bool _IsAtLegislature;
		
		private bool _IsConfidential;
		
		private bool _IsCrossGovernment;
		
		private bool _IsActive;
		
		private string _Schedule;
		
		private string _Significance;
		
		private bool _IsIssue;
		
		private bool _IsMilestone;
		
		private string _Strategy;
		
		private System.Nullable<System.DateTime> _NRDateTime;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<int> _CommunicationContactId;
		
		private string _Status;
		
		private string _HqStatus;
		
		private string _City;
		
		private string _Translations;
		
		private System.Nullable<int> _NRDistributionId;
		
		private string _SharedWithMinistryIds;
		
		private string _FavoriteSystemUsers;
		
		private string _Categories;
		
		private string _Sectors;
		
		private string _NROrigins;
		
		private string _Keywords;
		
		private string _NRDistributions;
		
		private string _GovernmentRepresentative;
		
		private string _OtherCity;
		
		private string _PremierRequested;
		
		private string _ContactName;
		
		private string _ContactNumber;
		
		private System.Nullable<int> _EventPlannerId;
		
		private System.Nullable<int> _VideographerId;
		
		private string _CommunicationsMaterials;
		
		private bool _IsTitleNeedsReview;
		
		private bool _IsDetailsNeedsReview;
		
		private bool _IsRepresentativeNeedsReview;
		
		private bool _IsCityNeedsReview;
		
		private bool _IsStartDateNeedsReview;
		
		private bool _IsEndDateNeedsReview;
		
		private bool _IsCategoriesNeedsReview;
		
		private bool _IsActiveNeedsReview;
		
		private bool _IsCommMaterialsNeedsReview;
		
		private bool _IsSignificanceNeedsReview;
		
		private bool _IsInternalNotesNeedsReview;
		
		private bool _IsStrategyNeedsReview;
		
		private bool _IsSchedulingConsiderationsNeedsReview;
		
		private bool _IsLeadOrganizationNeedsReview;
		
		private bool _IsInitiativesNeedsReview;
		
		private bool _IsTagsNeedsReview;
		
		private bool _IsOriginNeedsReview;
		
		private bool _IsDistributionNeedsReview;
		
		private bool _IsTranslationsRequiredNeedsReview;
		
		private bool _IsPremierRequestedNeedsReview;
		
		private bool _IsVenueNeedsReview;
		
		private bool _IsEventPlannerNeedsReview;
		
		private bool _IsDigitalNeedsReview;
		
		public ActiveActivity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this._StatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HqStatusId", DbType="Int")]
		public System.Nullable<int> HqStatusId
		{
			get
			{
				return this._HqStatusId;
			}
			set
			{
				if ((this._HqStatusId != value))
				{
					this._HqStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this._StartDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this._EndDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit NOT NULL")]
		public bool IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this._IsConfirmed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialDates", DbType="NVarChar(70)")]
		public string PotentialDates
		{
			get
			{
				return this._PotentialDates;
			}
			set
			{
				if ((this._PotentialDates != value))
				{
					this._PotentialDates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this._Details = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(4000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HqComments", DbType="NVarChar(2000)")]
		public string HqComments
		{
			get
			{
				return this._HqComments;
			}
			set
			{
				if ((this._HqComments != value))
				{
					this._HqComments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HqSection", DbType="Int NOT NULL")]
		public int HqSection
		{
			get
			{
				return this._HqSection;
			}
			set
			{
				if ((this._HqSection != value))
				{
					this._HqSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PremierRequestedId", DbType="Int")]
		public System.Nullable<int> PremierRequestedId
		{
			get
			{
				return this._PremierRequestedId;
			}
			set
			{
				if ((this._PremierRequestedId != value))
				{
					this._PremierRequestedId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMinistryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ContactMinistryId
		{
			get
			{
				return this._ContactMinistryId;
			}
			set
			{
				if ((this._ContactMinistryId != value))
				{
					this._ContactMinistryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ministry", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Ministry
		{
			get
			{
				return this._Ministry;
			}
			set
			{
				if ((this._Ministry != value))
				{
					this._Ministry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeadOrganization", DbType="NVarChar(100)")]
		public string LeadOrganization
		{
			get
			{
				return this._LeadOrganization;
			}
			set
			{
				if ((this._LeadOrganization != value))
				{
					this._LeadOrganization = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
		public System.Nullable<int> CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this._CityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Venue", DbType="NVarChar(150)")]
		public string Venue
		{
			get
			{
				return this._Venue;
			}
			set
			{
				if ((this._Venue != value))
				{
					this._Venue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentRepresentativeId", DbType="Int")]
		public System.Nullable<int> GovernmentRepresentativeId
		{
			get
			{
				return this._GovernmentRepresentativeId;
			}
			set
			{
				if ((this._GovernmentRepresentativeId != value))
				{
					this._GovernmentRepresentativeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllDay", DbType="Bit NOT NULL")]
		public bool IsAllDay
		{
			get
			{
				return this._IsAllDay;
			}
			set
			{
				if ((this._IsAllDay != value))
				{
					this._IsAllDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAtLegislature", DbType="Bit NOT NULL")]
		public bool IsAtLegislature
		{
			get
			{
				return this._IsAtLegislature;
			}
			set
			{
				if ((this._IsAtLegislature != value))
				{
					this._IsAtLegislature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfidential", DbType="Bit NOT NULL")]
		public bool IsConfidential
		{
			get
			{
				return this._IsConfidential;
			}
			set
			{
				if ((this._IsConfidential != value))
				{
					this._IsConfidential = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCrossGovernment", DbType="Bit NOT NULL")]
		public bool IsCrossGovernment
		{
			get
			{
				return this._IsCrossGovernment;
			}
			set
			{
				if ((this._IsCrossGovernment != value))
				{
					this._IsCrossGovernment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this._Schedule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Significance", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Significance
		{
			get
			{
				return this._Significance;
			}
			set
			{
				if ((this._Significance != value))
				{
					this._Significance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIssue", DbType="Bit NOT NULL")]
		public bool IsIssue
		{
			get
			{
				return this._IsIssue;
			}
			set
			{
				if ((this._IsIssue != value))
				{
					this._IsIssue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMilestone", DbType="Bit NOT NULL")]
		public bool IsMilestone
		{
			get
			{
				return this._IsMilestone;
			}
			set
			{
				if ((this._IsMilestone != value))
				{
					this._IsMilestone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strategy", DbType="NVarChar(500)")]
		public string Strategy
		{
			get
			{
				return this._Strategy;
			}
			set
			{
				if ((this._Strategy != value))
				{
					this._Strategy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> NRDateTime
		{
			get
			{
				return this._NRDateTime;
			}
			set
			{
				if ((this._NRDateTime != value))
				{
					this._NRDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this._CreatedDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this._LastUpdatedDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this._LastUpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunicationContactId", DbType="Int")]
		public System.Nullable<int> CommunicationContactId
		{
			get
			{
				return this._CommunicationContactId;
			}
			set
			{
				if ((this._CommunicationContactId != value))
				{
					this._CommunicationContactId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HqStatus", DbType="NVarChar(50)")]
		public string HqStatus
		{
			get
			{
				return this._HqStatus;
			}
			set
			{
				if ((this._HqStatus != value))
				{
					this._HqStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Translations", DbType="NVarChar(150)")]
		public string Translations
		{
			get
			{
				return this._Translations;
			}
			set
			{
				if ((this._Translations != value))
				{
					this._Translations = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRDistributionId", DbType="Int")]
		public System.Nullable<int> NRDistributionId
		{
			get
			{
				return this._NRDistributionId;
			}
			set
			{
				if ((this._NRDistributionId != value))
				{
					this._NRDistributionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SharedWithMinistryIds", DbType="VarChar(1500)")]
		public string SharedWithMinistryIds
		{
			get
			{
				return this._SharedWithMinistryIds;
			}
			set
			{
				if ((this._SharedWithMinistryIds != value))
				{
					this._SharedWithMinistryIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteSystemUsers", DbType="VarChar(1000)")]
		public string FavoriteSystemUsers
		{
			get
			{
				return this._FavoriteSystemUsers;
			}
			set
			{
				if ((this._FavoriteSystemUsers != value))
				{
					this._FavoriteSystemUsers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categories", DbType="VarChar(1000)")]
		public string Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				if ((this._Categories != value))
				{
					this._Categories = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sectors", DbType="VarChar(1000)")]
		public string Sectors
		{
			get
			{
				return this._Sectors;
			}
			set
			{
				if ((this._Sectors != value))
				{
					this._Sectors = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NROrigins", DbType="VarChar(1000)")]
		public string NROrigins
		{
			get
			{
				return this._NROrigins;
			}
			set
			{
				if ((this._NROrigins != value))
				{
					this._NROrigins = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(MAX)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this._Keywords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRDistributions", DbType="NVarChar(50)")]
		public string NRDistributions
		{
			get
			{
				return this._NRDistributions;
			}
			set
			{
				if ((this._NRDistributions != value))
				{
					this._NRDistributions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernmentRepresentative", DbType="NVarChar(50)")]
		public string GovernmentRepresentative
		{
			get
			{
				return this._GovernmentRepresentative;
			}
			set
			{
				if ((this._GovernmentRepresentative != value))
				{
					this._GovernmentRepresentative = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCity", DbType="NVarChar(150)")]
		public string OtherCity
		{
			get
			{
				return this._OtherCity;
			}
			set
			{
				if ((this._OtherCity != value))
				{
					this._OtherCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PremierRequested", DbType="NVarChar(50)")]
		public string PremierRequested
		{
			get
			{
				return this._PremierRequested;
			}
			set
			{
				if ((this._PremierRequested != value))
				{
					this._PremierRequested = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(100)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this._ContactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(20)")]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this._ContactNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventPlannerId", DbType="Int")]
		public System.Nullable<int> EventPlannerId
		{
			get
			{
				return this._EventPlannerId;
			}
			set
			{
				if ((this._EventPlannerId != value))
				{
					this._EventPlannerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideographerId", DbType="Int")]
		public System.Nullable<int> VideographerId
		{
			get
			{
				return this._VideographerId;
			}
			set
			{
				if ((this._VideographerId != value))
				{
					this._VideographerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunicationsMaterials", DbType="VarChar(1000)")]
		public string CommunicationsMaterials
		{
			get
			{
				return this._CommunicationsMaterials;
			}
			set
			{
				if ((this._CommunicationsMaterials != value))
				{
					this._CommunicationsMaterials = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTitleNeedsReview", DbType="Bit NOT NULL")]
		public bool IsTitleNeedsReview
		{
			get
			{
				return this._IsTitleNeedsReview;
			}
			set
			{
				if ((this._IsTitleNeedsReview != value))
				{
					this._IsTitleNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDetailsNeedsReview", DbType="Bit NOT NULL")]
		public bool IsDetailsNeedsReview
		{
			get
			{
				return this._IsDetailsNeedsReview;
			}
			set
			{
				if ((this._IsDetailsNeedsReview != value))
				{
					this._IsDetailsNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRepresentativeNeedsReview", DbType="Bit NOT NULL")]
		public bool IsRepresentativeNeedsReview
		{
			get
			{
				return this._IsRepresentativeNeedsReview;
			}
			set
			{
				if ((this._IsRepresentativeNeedsReview != value))
				{
					this._IsRepresentativeNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCityNeedsReview", DbType="Bit NOT NULL")]
		public bool IsCityNeedsReview
		{
			get
			{
				return this._IsCityNeedsReview;
			}
			set
			{
				if ((this._IsCityNeedsReview != value))
				{
					this._IsCityNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStartDateNeedsReview", DbType="Bit NOT NULL")]
		public bool IsStartDateNeedsReview
		{
			get
			{
				return this._IsStartDateNeedsReview;
			}
			set
			{
				if ((this._IsStartDateNeedsReview != value))
				{
					this._IsStartDateNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndDateNeedsReview", DbType="Bit NOT NULL")]
		public bool IsEndDateNeedsReview
		{
			get
			{
				return this._IsEndDateNeedsReview;
			}
			set
			{
				if ((this._IsEndDateNeedsReview != value))
				{
					this._IsEndDateNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCategoriesNeedsReview", DbType="Bit NOT NULL")]
		public bool IsCategoriesNeedsReview
		{
			get
			{
				return this._IsCategoriesNeedsReview;
			}
			set
			{
				if ((this._IsCategoriesNeedsReview != value))
				{
					this._IsCategoriesNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveNeedsReview", DbType="Bit NOT NULL")]
		public bool IsActiveNeedsReview
		{
			get
			{
				return this._IsActiveNeedsReview;
			}
			set
			{
				if ((this._IsActiveNeedsReview != value))
				{
					this._IsActiveNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCommMaterialsNeedsReview", DbType="Bit NOT NULL")]
		public bool IsCommMaterialsNeedsReview
		{
			get
			{
				return this._IsCommMaterialsNeedsReview;
			}
			set
			{
				if ((this._IsCommMaterialsNeedsReview != value))
				{
					this._IsCommMaterialsNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSignificanceNeedsReview", DbType="Bit NOT NULL")]
		public bool IsSignificanceNeedsReview
		{
			get
			{
				return this._IsSignificanceNeedsReview;
			}
			set
			{
				if ((this._IsSignificanceNeedsReview != value))
				{
					this._IsSignificanceNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInternalNotesNeedsReview", DbType="Bit NOT NULL")]
		public bool IsInternalNotesNeedsReview
		{
			get
			{
				return this._IsInternalNotesNeedsReview;
			}
			set
			{
				if ((this._IsInternalNotesNeedsReview != value))
				{
					this._IsInternalNotesNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStrategyNeedsReview", DbType="Bit NOT NULL")]
		public bool IsStrategyNeedsReview
		{
			get
			{
				return this._IsStrategyNeedsReview;
			}
			set
			{
				if ((this._IsStrategyNeedsReview != value))
				{
					this._IsStrategyNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSchedulingConsiderationsNeedsReview", DbType="Bit NOT NULL")]
		public bool IsSchedulingConsiderationsNeedsReview
		{
			get
			{
				return this._IsSchedulingConsiderationsNeedsReview;
			}
			set
			{
				if ((this._IsSchedulingConsiderationsNeedsReview != value))
				{
					this._IsSchedulingConsiderationsNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeadOrganizationNeedsReview", DbType="Bit NOT NULL")]
		public bool IsLeadOrganizationNeedsReview
		{
			get
			{
				return this._IsLeadOrganizationNeedsReview;
			}
			set
			{
				if ((this._IsLeadOrganizationNeedsReview != value))
				{
					this._IsLeadOrganizationNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInitiativesNeedsReview", DbType="Bit NOT NULL")]
		public bool IsInitiativesNeedsReview
		{
			get
			{
				return this._IsInitiativesNeedsReview;
			}
			set
			{
				if ((this._IsInitiativesNeedsReview != value))
				{
					this._IsInitiativesNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTagsNeedsReview", DbType="Bit NOT NULL")]
		public bool IsTagsNeedsReview
		{
			get
			{
				return this._IsTagsNeedsReview;
			}
			set
			{
				if ((this._IsTagsNeedsReview != value))
				{
					this._IsTagsNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOriginNeedsReview", DbType="Bit NOT NULL")]
		public bool IsOriginNeedsReview
		{
			get
			{
				return this._IsOriginNeedsReview;
			}
			set
			{
				if ((this._IsOriginNeedsReview != value))
				{
					this._IsOriginNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDistributionNeedsReview", DbType="Bit NOT NULL")]
		public bool IsDistributionNeedsReview
		{
			get
			{
				return this._IsDistributionNeedsReview;
			}
			set
			{
				if ((this._IsDistributionNeedsReview != value))
				{
					this._IsDistributionNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTranslationsRequiredNeedsReview", DbType="Bit NOT NULL")]
		public bool IsTranslationsRequiredNeedsReview
		{
			get
			{
				return this._IsTranslationsRequiredNeedsReview;
			}
			set
			{
				if ((this._IsTranslationsRequiredNeedsReview != value))
				{
					this._IsTranslationsRequiredNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPremierRequestedNeedsReview", DbType="Bit NOT NULL")]
		public bool IsPremierRequestedNeedsReview
		{
			get
			{
				return this._IsPremierRequestedNeedsReview;
			}
			set
			{
				if ((this._IsPremierRequestedNeedsReview != value))
				{
					this._IsPremierRequestedNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVenueNeedsReview", DbType="Bit NOT NULL")]
		public bool IsVenueNeedsReview
		{
			get
			{
				return this._IsVenueNeedsReview;
			}
			set
			{
				if ((this._IsVenueNeedsReview != value))
				{
					this._IsVenueNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEventPlannerNeedsReview", DbType="Bit NOT NULL")]
		public bool IsEventPlannerNeedsReview
		{
			get
			{
				return this._IsEventPlannerNeedsReview;
			}
			set
			{
				if ((this._IsEventPlannerNeedsReview != value))
				{
					this._IsEventPlannerNeedsReview = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDigitalNeedsReview", DbType="Bit NOT NULL")]
		public bool IsDigitalNeedsReview
		{
			get
			{
				return this._IsDigitalNeedsReview;
			}
			set
			{
				if ((this._IsDigitalNeedsReview != value))
				{
					this._IsDigitalNeedsReview = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="calendar.ActivityFiles")]
	public partial class ActivityFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActivityId;
		
		private System.Data.Linq.Binary _Data;
		
		private string _FileName;
		
		private string _FileType;
		
		private int _FileLength;
		
		private string _Md5;
		
		private System.DateTime _LastUpdatedDateTime;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileTypeChanging(string value);
    partial void OnFileTypeChanged();
    partial void OnFileLengthChanging(int value);
    partial void OnFileLengthChanged();
    partial void OnMd5Changing(string value);
    partial void OnMd5Changed();
    partial void OnLastUpdatedDateTimeChanging(System.DateTime value);
    partial void OnLastUpdatedDateTimeChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    #endregion
		
		public ActivityFile()
		{
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL")]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileLength", DbType="Int NOT NULL")]
		public int FileLength
		{
			get
			{
				return this._FileLength;
			}
			set
			{
				if ((this._FileLength != value))
				{
					this.OnFileLengthChanging(value);
					this.SendPropertyChanging();
					this._FileLength = value;
					this.SendPropertyChanged("FileLength");
					this.OnFileLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Md5", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Md5
		{
			get
			{
				return this._Md5;
			}
			set
			{
				if ((this._Md5 != value))
				{
					this.OnMd5Changing(value);
					this.SendPropertyChanging();
					this._Md5 = value;
					this.SendPropertyChanged("Md5");
					this.OnMd5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDateTime
		{
			get
			{
				return this._LastUpdatedDateTime;
			}
			set
			{
				if ((this._LastUpdatedDateTime != value))
				{
					this.OnLastUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDateTime = value;
					this.SendPropertyChanged("LastUpdatedDateTime");
					this.OnLastUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityFile", Storage="_Activity", ThisKey="ActivityId", OtherKey="Id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityFiles.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityFiles.Add(this);
						this._ActivityId = value.Id;
					}
					else
					{
						this._ActivityId = default(int);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetActivitySharedWithMinistriesResult
	{
		
		private System.Nullable<int> _activityId;
		
		private string _sharedWithMinistries;
		
		public GetActivitySharedWithMinistriesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityId", DbType="Int")]
		public System.Nullable<int> activityId
		{
			get
			{
				return this._activityId;
			}
			set
			{
				if ((this._activityId != value))
				{
					this._activityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sharedWithMinistries", DbType="VarChar(4096)")]
		public string sharedWithMinistries
		{
			get
			{
				return this._sharedWithMinistries;
			}
			set
			{
				if ((this._sharedWithMinistries != value))
				{
					this._sharedWithMinistries = value;
				}
			}
		}
	}
	
	public partial class GetActivityCategoriesResult
	{
		
		private System.Nullable<int> _activityId;
		
		private string _categories;
		
		public GetActivityCategoriesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityId", DbType="Int")]
		public System.Nullable<int> activityId
		{
			get
			{
				return this._activityId;
			}
			set
			{
				if ((this._activityId != value))
				{
					this._activityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categories", DbType="VarChar(4096)")]
		public string categories
		{
			get
			{
				return this._categories;
			}
			set
			{
				if ((this._categories != value))
				{
					this._categories = value;
				}
			}
		}
	}
	
	public partial class GetActivityCommunicationMaterialsResult
	{
		
		private System.Nullable<int> _activityId;
		
		private string _activityCommunicationMaterials;
		
		public GetActivityCommunicationMaterialsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityId", DbType="Int")]
		public System.Nullable<int> activityId
		{
			get
			{
				return this._activityId;
			}
			set
			{
				if ((this._activityId != value))
				{
					this._activityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityCommunicationMaterials", DbType="VarChar(4096)")]
		public string activityCommunicationMaterials
		{
			get
			{
				return this._activityCommunicationMaterials;
			}
			set
			{
				if ((this._activityCommunicationMaterials != value))
				{
					this._activityCommunicationMaterials = value;
				}
			}
		}
	}
	
	public partial class GetActivityNewsReleaseOriginsResult
	{
		
		private System.Nullable<int> _activityId;
		
		private string _activityNewsReleaseOrigins;
		
		public GetActivityNewsReleaseOriginsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityId", DbType="Int")]
		public System.Nullable<int> activityId
		{
			get
			{
				return this._activityId;
			}
			set
			{
				if ((this._activityId != value))
				{
					this._activityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityNewsReleaseOrigins", DbType="VarChar(4096)")]
		public string activityNewsReleaseOrigins
		{
			get
			{
				return this._activityNewsReleaseOrigins;
			}
			set
			{
				if ((this._activityNewsReleaseOrigins != value))
				{
					this._activityNewsReleaseOrigins = value;
				}
			}
		}
	}
	
	public partial class GetActivitySectorsResult
	{
		
		private System.Nullable<int> _activityId;
		
		private string _activitySectors;
		
		public GetActivitySectorsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityId", DbType="Int")]
		public System.Nullable<int> activityId
		{
			get
			{
				return this._activityId;
			}
			set
			{
				if ((this._activityId != value))
				{
					this._activityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activitySectors", DbType="VarChar(4096)")]
		public string activitySectors
		{
			get
			{
				return this._activitySectors;
			}
			set
			{
				if ((this._activitySectors != value))
				{
					this._activitySectors = value;
				}
			}
		}
	}
	
	public partial class GetActivityThemesResult
	{
		
		private System.Nullable<int> _activityId;
		
		private string _activityThemes;
		
		public GetActivityThemesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityId", DbType="Int")]
		public System.Nullable<int> activityId
		{
			get
			{
				return this._activityId;
			}
			set
			{
				if ((this._activityId != value))
				{
					this._activityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityThemes", DbType="VarChar(4096)")]
		public string activityThemes
		{
			get
			{
				return this._activityThemes;
			}
			set
			{
				if ((this._activityThemes != value))
				{
					this._activityThemes = value;
				}
			}
		}
	}
	
	public partial class GetActivityTagsResult
	{
		
		private System.Nullable<int> _activityId;
		
		private string _activityTags;
		
		public GetActivityTagsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityId", DbType="Int")]
		public System.Nullable<int> activityId
		{
			get
			{
				return this._activityId;
			}
			set
			{
				if ((this._activityId != value))
				{
					this._activityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityTags", DbType="VarChar(4096)")]
		public string activityTags
		{
			get
			{
				return this._activityTags;
			}
			set
			{
				if ((this._activityTags != value))
				{
					this._activityTags = value;
				}
			}
		}
	}
	
	public partial class GetActivityKeywordsResult
	{
		
		private System.Nullable<int> _keywordId;
		
		private string _keywordName;
		
		public GetActivityKeywordsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywordId", DbType="Int")]
		public System.Nullable<int> keywordId
		{
			get
			{
				return this._keywordId;
			}
			set
			{
				if ((this._keywordId != value))
				{
					this._keywordId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywordName", DbType="VarChar(50)")]
		public string keywordName
		{
			get
			{
				return this._keywordName;
			}
			set
			{
				if ((this._keywordName != value))
				{
					this._keywordName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
